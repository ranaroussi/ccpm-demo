{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/client/components/redirect-status-code.ts","turbopack:///[project]/node_modules/next/src/client/components/redirect-error.ts","turbopack:///[project]/node_modules/next/src/client/components/redirect.ts","turbopack:///[project]/node_modules/next/src/client/components/http-access-fallback/http-access-fallback.ts","turbopack:///[project]/node_modules/next/src/client/components/not-found.ts","turbopack:///[project]/node_modules/next/src/client/components/forbidden.ts","turbopack:///[project]/node_modules/next/src/client/components/unauthorized.ts","turbopack:///[project]/node_modules/next/src/server/dynamic-rendering-utils.ts","turbopack:///[project]/node_modules/next/src/server/lib/router-utils/is-postpone.ts","turbopack:///[project]/node_modules/next/src/shared/lib/lazy-dynamic/bailout-to-csr.ts","turbopack:///[project]/node_modules/next/src/client/components/is-next-router-error.ts","turbopack:///[project]/node_modules/next/src/client/components/hooks-server-context.ts","turbopack:///[project]/node_modules/next/src/client/components/static-generation-bailout.ts","turbopack:///[project]/node_modules/next/src/lib/framework/boundary-constants.tsx","turbopack:///[project]/node_modules/next/src/lib/scheduler.ts","turbopack:///[project]/node_modules/next/src/shared/lib/invariant-error.ts","turbopack:///[project]/node_modules/next/src/server/app-render/dynamic-rendering.ts","turbopack:///[project]/node_modules/next/src/client/components/unstable-rethrow.server.ts","turbopack:///[project]/node_modules/next/src/client/components/unstable-rethrow.ts","turbopack:///[project]/node_modules/next/src/client/components/navigation.react-server.ts","turbopack:///[project]/node_modules/next/src/api/navigation.react-server.ts","turbopack:///[project]/node_modules/devlop/lib/default.js","turbopack:///[project]/node_modules/unist-util-is/lib/index.js","turbopack:///[project]/node_modules/unist-util-visit-parents/lib/color.node.js","turbopack:///[project]/node_modules/unist-util-visit-parents/lib/index.js","turbopack:///[project]/node_modules/unist-util-visit/lib/index.js","turbopack:///[project]/node_modules/ccount/index.js","turbopack:///[project]/node_modules/mdast-util-gfm-autolink-literal/lib/index.js","turbopack:///[project]/node_modules/micromark-util-character/index.js","turbopack:///[project]/node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","turbopack:///[project]/node_modules/mdast-util-find-and-replace/lib/index.js","turbopack:///[project]/node_modules/micromark-util-normalize-identifier/index.js","turbopack:///[project]/node_modules/mdast-util-gfm-footnote/lib/index.js","turbopack:///[project]/node_modules/mdast-util-gfm-strikethrough/lib/index.js","turbopack:///[project]/node_modules/markdown-table/index.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/break.js","turbopack:///[project]/node_modules/longest-streak/index.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/code.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/definition.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/util/encode-character-reference.js","turbopack:///[project]/node_modules/micromark-util-classify-character/index.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/util/encode-info.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","turbopack:///[project]/node_modules/mdast-util-to-string/lib/index.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/heading.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/html.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/image.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/link.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/list.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","turbopack:///[project]/node_modules/mdast-util-phrasing/lib/index.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/root.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/strong.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/text.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","turbopack:///[project]/node_modules/mdast-util-to-markdown/lib/handle/index.js","turbopack:///[project]/node_modules/mdast-util-gfm-table/lib/index.js","turbopack:///[project]/node_modules/mdast-util-gfm-task-list-item/lib/index.js","turbopack:///[project]/node_modules/mdast-util-gfm/lib/index.js","turbopack:///[project]/node_modules/micromark-util-chunked/index.js","turbopack:///[project]/node_modules/micromark-util-combine-extensions/index.js","turbopack:///[project]/node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","turbopack:///[project]/node_modules/micromark-util-encode/index.js","turbopack:///[project]/node_modules/micromark-util-sanitize-uri/index.js","turbopack:///[project]/node_modules/micromark-extension-gfm-autolink-literal/lib/html.js","turbopack:///[project]/node_modules/micromark-factory-space/index.js","turbopack:///[project]/node_modules/micromark-core-commonmark/lib/blank-line.js","turbopack:///[project]/node_modules/micromark-extension-gfm-footnote/lib/syntax.js","turbopack:///[project]/node_modules/micromark-extension-gfm-footnote/lib/html.js","turbopack:///[project]/node_modules/micromark-util-resolve-all/index.js","turbopack:///[project]/node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","turbopack:///[project]/node_modules/micromark-extension-gfm-strikethrough/lib/html.js","turbopack:///[project]/node_modules/micromark-extension-gfm-table/lib/edit-map.js","turbopack:///[project]/node_modules/micromark-extension-gfm-table/lib/infer.js","turbopack:///[project]/node_modules/micromark-extension-gfm-table/lib/syntax.js","turbopack:///[project]/node_modules/micromark-extension-gfm-table/lib/html.js","turbopack:///[project]/node_modules/micromark-extension-gfm-tagfilter/lib/index.js","turbopack:///[project]/node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","turbopack:///[project]/node_modules/micromark-extension-gfm-task-list-item/lib/html.js","turbopack:///[project]/node_modules/micromark-extension-gfm/index.js","turbopack:///[project]/node_modules/remark-gfm/lib/index.js","turbopack:///[project]/node_modules/hast-util-heading-rank/lib/index.js","turbopack:///[project]/node_modules/hast-util-to-string/lib/index.js","turbopack:///[project]/node_modules/github-slugger/regex.js","turbopack:///[project]/node_modules/github-slugger/index.js","turbopack:///[project]/node_modules/rehype-slug/lib/index.js","turbopack:///[project]/node_modules/@ungap/structured-clone/esm/types.js","turbopack:///[project]/node_modules/@ungap/structured-clone/esm/deserialize.js","turbopack:///[project]/node_modules/@ungap/structured-clone/esm/serialize.js","turbopack:///[project]/node_modules/@ungap/structured-clone/esm/index.js","turbopack:///[project]/node_modules/rehype-autolink-headings/lib/index.js","turbopack:///[project]/node_modules/hast-util-is-element/lib/index.js","turbopack:///[project]/node_modules/parse-numeric-range/index.js","turbopack:///[project]/node_modules/extend/index.js","turbopack:///[project]/node_modules/unist-util-stringify-position/lib/index.js","turbopack:///[project]/node_modules/vfile-message/lib/index.js","turbopack:///[project]/node_modules/vfile/lib/minurl.shared.js","turbopack:///[project]/node_modules/vfile/lib/index.js","turbopack:///[project]/node_modules/bail/index.js","turbopack:///[project]/node_modules/unified/lib/index.js","turbopack:///[project]/node_modules/is-plain-obj/index.js","turbopack:///[project]/node_modules/trough/lib/index.js","turbopack:///[project]/node_modules/unified/lib/callable-instance.js","turbopack:///[project]/node_modules/hast-util-parse-selector/lib/index.js","turbopack:///[project]/node_modules/parse5/dist/common/unicode.js","turbopack:///[project]/node_modules/property-information/lib/util/types.js","turbopack:///[project]/node_modules/hast-util-from-html/lib/index.js","turbopack:///[project]/node_modules/parse5/dist/parser/formatting-element-list.js","turbopack:///[project]/node_modules/parse5/dist/common/error-codes.js","turbopack:///[project]/node_modules/parse5/dist/common/token.js","../../src/escape.ts","../../src/decode.ts","../../src/decode-codepoint.ts","turbopack:///[project]/node_modules/parse5/dist/common/foreign-content.js","turbopack:///[project]/node_modules/parse5/dist/parser/open-element-stack.js","turbopack:///[project]/node_modules/parse5/dist/common/doctype.js","turbopack:///[project]/node_modules/parse5/dist/common/html.js","turbopack:///[project]/node_modules/parse5/dist/tree-adapters/default.js","../../../src/generated/decode-data-xml.ts","../../../src/generated/decode-data-html.ts","turbopack:///[project]/node_modules/parse5/dist/tokenizer/preprocessor.js","turbopack:///[project]/node_modules/property-information/lib/xml.js","turbopack:///[project]/node_modules/property-information/lib/xlink.js","turbopack:///[project]/node_modules/parse5/dist/serializer/index.js","turbopack:///[project]/node_modules/property-information/lib/xmlns.js","turbopack:///[project]/node_modules/property-information/lib/aria.js","turbopack:///[project]/node_modules/property-information/lib/util/defined-info.js","turbopack:///[project]/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","turbopack:///[project]/node_modules/web-namespaces/index.js","turbopack:///[project]/node_modules/property-information/lib/util/info.js","turbopack:///[project]/node_modules/property-information/lib/util/schema.js","turbopack:///[project]/node_modules/parse5/dist/tokenizer/index.js","turbopack:///[project]/node_modules/property-information/lib/find.js","turbopack:///[project]/node_modules/space-separated-tokens/index.js","turbopack:///[project]/node_modules/property-information/lib/util/case-sensitive-transform.js","turbopack:///[project]/node_modules/property-information/lib/normalize.js","turbopack:///[project]/node_modules/parse5/dist/parser/index.js","turbopack:///[project]/node_modules/property-information/lib/svg.js","turbopack:///[project]/node_modules/property-information/lib/util/case-insensitive-transform.js","turbopack:///[project]/node_modules/hast-util-from-html/lib/errors.js","turbopack:///[project]/node_modules/property-information/lib/html.js","turbopack:///[project]/node_modules/property-information/index.js","turbopack:///[project]/node_modules/property-information/lib/util/merge.js","turbopack:///[project]/node_modules/vfile-location/lib/index.js","turbopack:///[project]/node_modules/comma-separated-tokens/index.js","turbopack:///[project]/node_modules/hastscript/lib/index.js","turbopack:///[project]/node_modules/hast-util-from-parse5/lib/index.js","turbopack:///[project]/node_modules/parse5/dist/index.js","turbopack:///[project]/node_modules/rehype-parse/lib/index.js","turbopack:///[project]/node_modules/property-information/lib/util/create.js","turbopack:///[project]/node_modules/hastscript/lib/create-h.js","turbopack:///[project]/node_modules/rehype-pretty-code/dist/index.js"],"sourcesContent":["export enum RedirectStatusCode {\n  SeeOther = 303,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n}\n","import { RedirectStatusCode } from './redirect-status-code'\n\nexport const REDIRECT_ERROR_CODE = 'NEXT_REDIRECT'\n\nexport enum RedirectType {\n  push = 'push',\n  replace = 'replace',\n}\n\nexport type RedirectError = Error & {\n  digest: `${typeof REDIRECT_ERROR_CODE};${RedirectType};${string};${RedirectStatusCode};`\n}\n\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */\nexport function isRedirectError(error: unknown): error is RedirectError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n\n  const digest = error.digest.split(';')\n  const [errorCode, type] = digest\n  const destination = digest.slice(2, -2).join(';')\n  const status = digest.at(-2)\n\n  const statusCode = Number(status)\n\n  return (\n    errorCode === REDIRECT_ERROR_CODE &&\n    (type === 'replace' || type === 'push') &&\n    typeof destination === 'string' &&\n    !isNaN(statusCode) &&\n    statusCode in RedirectStatusCode\n  )\n}\n","import { RedirectStatusCode } from './redirect-status-code'\nimport {\n  RedirectType,\n  type RedirectError,\n  isRedirectError,\n  REDIRECT_ERROR_CODE,\n} from './redirect-error'\n\nconst actionAsyncStorage =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/action-async-storage.external') as typeof import('../../server/app-render/action-async-storage.external')\n      ).actionAsyncStorage\n    : undefined\n\nexport function getRedirectError(\n  url: string,\n  type: RedirectType,\n  statusCode: RedirectStatusCode = RedirectStatusCode.TemporaryRedirect\n): RedirectError {\n  const error = new Error(REDIRECT_ERROR_CODE) as RedirectError\n  error.digest = `${REDIRECT_ERROR_CODE};${type};${url};${statusCode};`\n  return error\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 307/303 to the caller.\n * - In a Server Action, type defaults to 'push' and 'replace' elsewhere.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function redirect(\n  /** The URL to redirect to */\n  url: string,\n  type?: RedirectType\n): never {\n  type ??= actionAsyncStorage?.getStore()?.isAction\n    ? RedirectType.push\n    : RedirectType.replace\n\n  throw getRedirectError(url, type, RedirectStatusCode.TemporaryRedirect)\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 308/303 to the caller.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function permanentRedirect(\n  /** The URL to redirect to */\n  url: string,\n  type: RedirectType = RedirectType.replace\n): never {\n  throw getRedirectError(url, type, RedirectStatusCode.PermanentRedirect)\n}\n\n/**\n * Returns the encoded URL from the error if it's a RedirectError, null\n * otherwise. Note that this does not validate the URL returned.\n *\n * @param error the error that may be a redirect error\n * @return the url if the error was a redirect error\n */\nexport function getURLFromRedirectError(error: RedirectError): string\nexport function getURLFromRedirectError(error: unknown): string | null {\n  if (!isRedirectError(error)) return null\n\n  // Slices off the beginning of the digest that contains the code and the\n  // separating ';'.\n  return error.digest.split(';').slice(2, -2).join(';')\n}\n\nexport function getRedirectTypeFromError(error: RedirectError): RedirectType {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return error.digest.split(';', 2)[1] as RedirectType\n}\n\nexport function getRedirectStatusCodeFromError(error: RedirectError): number {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return Number(error.digest.split(';').at(-2))\n}\n","export const HTTPAccessErrorStatus = {\n  NOT_FOUND: 404,\n  FORBIDDEN: 403,\n  UNAUTHORIZED: 401,\n}\n\nconst ALLOWED_CODES = new Set(Object.values(HTTPAccessErrorStatus))\n\nexport const HTTP_ERROR_FALLBACK_ERROR_CODE = 'NEXT_HTTP_ERROR_FALLBACK'\n\nexport type HTTPAccessFallbackError = Error & {\n  digest: `${typeof HTTP_ERROR_FALLBACK_ERROR_CODE};${string}`\n}\n\n/**\n * Checks an error to determine if it's an error generated by\n * the HTTP navigation APIs `notFound()`, `forbidden()` or `unauthorized()`.\n *\n * @param error the error that may reference a HTTP access error\n * @returns true if the error is a HTTP access error\n */\nexport function isHTTPAccessFallbackError(\n  error: unknown\n): error is HTTPAccessFallbackError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n  const [prefix, httpStatus] = error.digest.split(';')\n\n  return (\n    prefix === HTTP_ERROR_FALLBACK_ERROR_CODE &&\n    ALLOWED_CODES.has(Number(httpStatus))\n  )\n}\n\nexport function getAccessFallbackHTTPStatus(\n  error: HTTPAccessFallbackError\n): number {\n  const httpStatus = error.digest.split(';')[1]\n  return Number(httpStatus)\n}\n\nexport function getAccessFallbackErrorTypeByStatus(\n  status: number\n): 'not-found' | 'forbidden' | 'unauthorized' | undefined {\n  switch (status) {\n    case 401:\n      return 'unauthorized'\n    case 403:\n      return 'forbidden'\n    case 404:\n      return 'not-found'\n    default:\n      return\n  }\n}\n","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n/**\n * This function allows you to render the [not-found.js file](https://nextjs.org/docs/app/api-reference/file-conventions/not-found)\n * within a route segment as well as inject a tag.\n *\n * `notFound()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a `<meta name=\"robots\" content=\"noindex\" />` meta tag and set the status code to 404.\n * - In a Route Handler or Server Action, it will serve a 404 to the caller.\n *\n * Read more: [Next.js Docs: `notFound`](https://nextjs.org/docs/app/api-reference/functions/not-found)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};404`\n\nexport function notFound(): never {\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n\n  throw error\n}\n","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `forbidden` docs\n/**\n * @experimental\n * This function allows you to render the [forbidden.js file](https://nextjs.org/docs/app/api-reference/file-conventions/forbidden)\n * within a route segment as well as inject a tag.\n *\n * `forbidden()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * Read more: [Next.js Docs: `forbidden`](https://nextjs.org/docs/app/api-reference/functions/forbidden)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};403`\n\nexport function forbidden(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`forbidden()\\` is experimental and only allowed to be enabled when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `unauthorized` docs\n/**\n * @experimental\n * This function allows you to render the [unauthorized.js file](https://nextjs.org/docs/app/api-reference/file-conventions/unauthorized)\n * within a route segment as well as inject a tag.\n *\n * `unauthorized()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n *\n * Read more: [Next.js Docs: `unauthorized`](https://nextjs.org/docs/app/api-reference/functions/unauthorized)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};401`\n\nexport function unauthorized(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`unauthorized()\\` is experimental and only allowed to be used when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n","export function isHangingPromiseRejectionError(\n  err: unknown\n): err is HangingPromiseRejectionError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === HANGING_PROMISE_REJECTION\n}\n\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION'\n\nclass HangingPromiseRejectionError extends Error {\n  public readonly digest = HANGING_PROMISE_REJECTION\n\n  constructor(\n    public readonly route: string,\n    public readonly expression: string\n  ) {\n    super(\n      `During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context. This occurred at route \"${route}\".`\n    )\n  }\n}\n\ntype AbortListeners = Array<(err: unknown) => void>\nconst abortListenersBySignal = new WeakMap<AbortSignal, AbortListeners>()\n\n/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for cacheComponents where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */\nexport function makeHangingPromise<T>(\n  signal: AbortSignal,\n  route: string,\n  expression: string\n): Promise<T> {\n  if (signal.aborted) {\n    return Promise.reject(new HangingPromiseRejectionError(route, expression))\n  } else {\n    const hangingPromise = new Promise<T>((_, reject) => {\n      const boundRejection = reject.bind(\n        null,\n        new HangingPromiseRejectionError(route, expression)\n      )\n      let currentListeners = abortListenersBySignal.get(signal)\n      if (currentListeners) {\n        currentListeners.push(boundRejection)\n      } else {\n        const listeners = [boundRejection]\n        abortListenersBySignal.set(signal, listeners)\n        signal.addEventListener(\n          'abort',\n          () => {\n            for (let i = 0; i < listeners.length; i++) {\n              listeners[i]()\n            }\n          },\n          { once: true }\n        )\n      }\n    })\n    // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n    // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n    // your own promise out of it you'll need to ensure you handle the error when it rejects.\n    hangingPromise.catch(ignoreReject)\n    return hangingPromise\n  }\n}\n\nfunction ignoreReject() {}\n\nexport function makeDevtoolsIOAwarePromise<T>(underlying: T): Promise<T> {\n  // in React DevTools if we resolve in a setTimeout we will observe\n  // the promise resolution as something that can suspend a boundary or root.\n  return new Promise<T>((resolve) => {\n    // Must use setTimeout to be considered IO React DevTools. setImmediate will not work.\n    setTimeout(() => {\n      resolve(underlying)\n    }, 0)\n  })\n}\n","const REACT_POSTPONE_TYPE: symbol = Symbol.for('react.postpone')\n\nexport function isPostpone(error: any): boolean {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    error.$$typeof === REACT_POSTPONE_TYPE\n  )\n}\n","// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = 'BAILOUT_TO_CLIENT_SIDE_RENDERING'\n\n/** An error that should be thrown when we want to bail out to client-side rendering. */\nexport class BailoutToCSRError extends Error {\n  public readonly digest = BAILOUT_TO_CSR\n\n  constructor(public readonly reason: string) {\n    super(`Bail out to client-side rendering: ${reason}`)\n  }\n}\n\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */\nexport function isBailoutToCSRError(err: unknown): err is BailoutToCSRError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === BAILOUT_TO_CSR\n}\n","import {\n  isHTTPAccessFallbackError,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\nimport { isRedirectError, type RedirectError } from './redirect-error'\n\n/**\n * Returns true if the error is a navigation signal error. These errors are\n * thrown by user code to perform navigation operations and interrupt the React\n * render.\n */\nexport function isNextRouterError(\n  error: unknown\n): error is RedirectError | HTTPAccessFallbackError {\n  return isRedirectError(error) || isHTTPAccessFallbackError(error)\n}\n","const DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE'\n\nexport class DynamicServerError extends Error {\n  digest: typeof DYNAMIC_ERROR_CODE = DYNAMIC_ERROR_CODE\n\n  constructor(public readonly description: string) {\n    super(`Dynamic server usage: ${description}`)\n  }\n}\n\nexport function isDynamicServerError(err: unknown): err is DynamicServerError {\n  if (\n    typeof err !== 'object' ||\n    err === null ||\n    !('digest' in err) ||\n    typeof err.digest !== 'string'\n  ) {\n    return false\n  }\n\n  return err.digest === DYNAMIC_ERROR_CODE\n}\n","const NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT'\n\nexport class StaticGenBailoutError extends Error {\n  public readonly code = NEXT_STATIC_GEN_BAILOUT\n}\n\nexport function isStaticGenBailoutError(\n  error: unknown\n): error is StaticGenBailoutError {\n  if (typeof error !== 'object' || error === null || !('code' in error)) {\n    return false\n  }\n\n  return error.code === NEXT_STATIC_GEN_BAILOUT\n}\n","export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__'\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__'\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__'\nexport const ROOT_LAYOUT_BOUNDARY_NAME = '__next_root_layout_boundary__'\n","export type ScheduledFn<T = void> = () => T | PromiseLike<T>\nexport type SchedulerFn<T = void> = (cb: ScheduledFn<T>) => void\n\n/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */\nexport const scheduleOnNextTick = (cb: ScheduledFn<void>) => {\n  // We use Promise.resolve().then() here so that the operation is scheduled at\n  // the end of the promise job queue, we then add it to the next process tick\n  // to ensure it's evaluated afterwards.\n  //\n  // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n  //\n  Promise.resolve().then(() => {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      setTimeout(cb, 0)\n    } else {\n      process.nextTick(cb)\n    }\n  })\n}\n\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */\nexport const scheduleImmediate = (cb: ScheduledFn<void>): void => {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    setTimeout(cb, 0)\n  } else {\n    setImmediate(cb)\n  }\n}\n\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */\nexport function atLeastOneTask() {\n  return new Promise<void>((resolve) => scheduleImmediate(resolve))\n}\n\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */\nexport function waitAtLeastOneReactRenderTask(): Promise<void> {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    return new Promise((r) => setTimeout(r, 0))\n  } else {\n    return new Promise((r) => setImmediate(r))\n  }\n}\n","export class InvariantError extends Error {\n  constructor(message: string, options?: ErrorOptions) {\n    super(\n      `Invariant: ${message.endsWith('.') ? message : message + '.'} This is a bug in Next.js.`,\n      options\n    )\n    this.name = 'InvariantError'\n  }\n}\n","/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */\n\nimport type { WorkStore } from '../app-render/work-async-storage.external'\nimport type {\n  WorkUnitStore,\n  RequestStore,\n  PrerenderStoreLegacy,\n  PrerenderStoreModern,\n  PrerenderStoreModernRuntime,\n} from '../app-render/work-unit-async-storage.external'\n\n// Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react'\n\nimport { DynamicServerError } from '../../client/components/hooks-server-context'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport {\n  getRuntimeStagePromise,\n  workUnitAsyncStorage,\n} from './work-unit-async-storage.external'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n  ROOT_LAYOUT_BOUNDARY_NAME,\n} from '../../lib/framework/boundary-constants'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\nimport { BailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nconst hasPostpone = typeof React.unstable_postpone === 'function'\n\nexport type DynamicAccess = {\n  /**\n   * If debugging, this will contain the stack trace of where the dynamic access\n   * occurred. This is used to provide more information to the user about why\n   * their page is being rendered dynamically.\n   */\n  stack?: string\n\n  /**\n   * The expression that was accessed dynamically.\n   */\n  expression: string\n}\n\n// Stores dynamic reasons used during an RSC render.\nexport type DynamicTrackingState = {\n  /**\n   * When true, stack information will also be tracked during dynamic access.\n   */\n  readonly isDebugDynamicAccesses: boolean | undefined\n\n  /**\n   * The dynamic accesses that occurred during the render.\n   */\n  readonly dynamicAccesses: Array<DynamicAccess>\n\n  syncDynamicErrorWithStack: null | Error\n}\n\n// Stores dynamic reasons used during an SSR render.\nexport type DynamicValidationState = {\n  hasSuspenseAboveBody: boolean\n  hasDynamicMetadata: boolean\n  hasDynamicViewport: boolean\n  hasAllowedDynamic: boolean\n  dynamicErrors: Array<Error>\n}\n\nexport function createDynamicTrackingState(\n  isDebugDynamicAccesses: boolean | undefined\n): DynamicTrackingState {\n  return {\n    isDebugDynamicAccesses,\n    dynamicAccesses: [],\n    syncDynamicErrorWithStack: null,\n  }\n}\n\nexport function createDynamicValidationState(): DynamicValidationState {\n  return {\n    hasSuspenseAboveBody: false,\n    hasDynamicMetadata: false,\n    hasDynamicViewport: false,\n    hasAllowedDynamic: false,\n    dynamicErrors: [],\n  }\n}\n\nexport function getFirstDynamicReason(\n  trackingState: DynamicTrackingState\n): undefined | string {\n  return trackingState.dynamicAccesses[0]?.expression\n}\n\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */\nexport function markCurrentScopeAsDynamic(\n  store: WorkStore,\n  workUnitStore: undefined | Exclude<WorkUnitStore, PrerenderStoreModern>,\n  expression: string\n): void {\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'cache':\n      case 'unstable-cache':\n        // Inside cache scopes, marking a scope as dynamic has no effect,\n        // because the outer cache scope creates a cache boundary. This is\n        // subtly different from reading a dynamic data source, which is\n        // forbidden inside a cache scope.\n        return\n      case 'private-cache':\n        // A private cache scope is already dynamic by definition.\n        return\n      case 'prerender-legacy':\n      case 'prerender-ppr':\n      case 'request':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n\n  // If we're forcing dynamic rendering or we're forcing static rendering, we\n  // don't need to do anything here because the entire page is already dynamic\n  // or it's static and it should not throw or postpone here.\n  if (store.forceDynamic || store.forceStatic) return\n\n  if (store.dynamicShouldError) {\n    throw new StaticGenBailoutError(\n      `Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n    )\n  }\n\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender-ppr':\n        return postponeWithTracking(\n          store.route,\n          expression,\n          workUnitStore.dynamicTracking\n        )\n      case 'prerender-legacy':\n        workUnitStore.revalidate = 0\n\n        // We aren't prerendering, but we are generating a static page. We need\n        // to bail out of static generation.\n        const err = new DynamicServerError(\n          `Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n        )\n        store.dynamicUsageDescription = expression\n        store.dynamicUsageStack = err.stack\n\n        throw err\n      case 'request':\n        if (process.env.NODE_ENV !== 'production') {\n          workUnitStore.usedDynamic = true\n        }\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n}\n\n/**\n * This function is meant to be used when prerendering without cacheComponents or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */\nexport function throwToInterruptStaticGeneration(\n  expression: string,\n  store: WorkStore,\n  prerenderStore: PrerenderStoreLegacy\n): never {\n  // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n  const err = new DynamicServerError(\n    `Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n  )\n\n  prerenderStore.revalidate = 0\n\n  store.dynamicUsageDescription = expression\n  store.dynamicUsageStack = err.stack\n\n  throw err\n}\n\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */\nexport function trackDynamicDataInDynamicRender(workUnitStore: WorkUnitStore) {\n  switch (workUnitStore.type) {\n    case 'cache':\n    case 'unstable-cache':\n      // Inside cache scopes, marking a scope as dynamic has no effect,\n      // because the outer cache scope creates a cache boundary. This is\n      // subtly different from reading a dynamic data source, which is\n      // forbidden inside a cache scope.\n      return\n    case 'private-cache':\n      // A private cache scope is already dynamic by definition.\n      return\n    case 'prerender':\n    case 'prerender-runtime':\n    case 'prerender-legacy':\n    case 'prerender-ppr':\n    case 'prerender-client':\n      break\n    case 'request':\n      if (process.env.NODE_ENV !== 'production') {\n        workUnitStore.usedDynamic = true\n      }\n      break\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nfunction abortOnSynchronousDynamicDataAccess(\n  route: string,\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n\n  const error = createPrerenderInterruptedError(reason)\n\n  prerenderStore.controller.abort(error)\n\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function abortOnSynchronousPlatformIOAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n  // It is important that we set this tracking value after aborting. Aborts are executed\n  // synchronously except for the case where you abort during render itself. By setting this\n  // value late we can use it to determine if any of the aborted tasks are the task that\n  // called the sync IO expression in the first place.\n  if (dynamicTracking) {\n    if (dynamicTracking.syncDynamicErrorWithStack === null) {\n      dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n    }\n  }\n}\n\nexport function trackSynchronousPlatformIOAccessInDev(\n  requestStore: RequestStore\n): void {\n  // We don't actually have a controller to abort but we do the semantic equivalent by\n  // advancing the request store out of prerender mode\n  requestStore.prerenderPhase = false\n}\n\n/**\n * use this function when prerendering with cacheComponents. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in cacheComponents mode.\n *\n * @internal\n */\nexport function abortAndThrowOnSynchronousRequestDataAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): never {\n  const prerenderSignal = prerenderStore.controller.signal\n  if (prerenderSignal.aborted === false) {\n    // TODO it would be better to move this aborted check into the callsite so we can avoid making\n    // the error object when it isn't relevant to the aborting of the prerender however\n    // since we need the throw semantics regardless of whether we abort it is easier to land\n    // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n    // to ideal implementation\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n    // It is important that we set this tracking value after aborting. Aborts are executed\n    // synchronously except for the case where you abort during render itself. By setting this\n    // value late we can use it to determine if any of the aborted tasks are the task that\n    // called the sync IO expression in the first place.\n    const dynamicTracking = prerenderStore.dynamicTracking\n    if (dynamicTracking) {\n      if (dynamicTracking.syncDynamicErrorWithStack === null) {\n        dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n      }\n    }\n  }\n  throw createPrerenderInterruptedError(\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n  )\n}\n\n/**\n * Use this function when dynamically prerendering with dynamicIO.\n * We don't want to error, because it's better to return something\n * (and we've already aborted the render at the point where the sync dynamic error occured),\n * but we should log an error server-side.\n * @internal\n */\nexport function warnOnSyncDynamicError(dynamicTracking: DynamicTrackingState) {\n  if (dynamicTracking.syncDynamicErrorWithStack) {\n    // the server did something sync dynamic, likely\n    // leading to an early termination of the prerender.\n    console.error(dynamicTracking.syncDynamicErrorWithStack)\n  }\n}\n\n// For now these implementations are the same so we just reexport\nexport const trackSynchronousRequestDataAccessInDev =\n  trackSynchronousPlatformIOAccessInDev\n\n/**\n * This component will call `React.postpone` that throws the postponed error.\n */\ntype PostponeProps = {\n  reason: string\n  route: string\n}\nexport function Postpone({ reason, route }: PostponeProps): never {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  const dynamicTracking =\n    prerenderStore && prerenderStore.type === 'prerender-ppr'\n      ? prerenderStore.dynamicTracking\n      : null\n  postponeWithTracking(route, reason, dynamicTracking)\n}\n\nexport function postponeWithTracking(\n  route: string,\n  expression: string,\n  dynamicTracking: null | DynamicTrackingState\n): never {\n  assertPostpone()\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n\n  React.unstable_postpone(createPostponeReason(route, expression))\n}\n\nfunction createPostponeReason(route: string, expression: string) {\n  return (\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` +\n    `React throws this special object to indicate where. It should not be caught by ` +\n    `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`\n  )\n}\n\nexport function isDynamicPostpone(err: unknown) {\n  if (\n    typeof err === 'object' &&\n    err !== null &&\n    typeof (err as any).message === 'string'\n  ) {\n    return isDynamicPostponeReason((err as any).message)\n  }\n  return false\n}\n\nfunction isDynamicPostponeReason(reason: string) {\n  return (\n    reason.includes(\n      'needs to bail out of prerendering at this point because it used'\n    ) &&\n    reason.includes(\n      'Learn more: https://nextjs.org/docs/messages/ppr-caught-error'\n    )\n  )\n}\n\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n  throw new Error(\n    'Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'\n  )\n}\n\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED'\n\nfunction createPrerenderInterruptedError(message: string): Error {\n  const error = new Error(message)\n  ;(error as any).digest = NEXT_PRERENDER_INTERRUPTED\n  return error\n}\n\ntype DigestError = Error & {\n  digest: string\n}\n\nexport function isPrerenderInterruptedError(\n  error: unknown\n): error is DigestError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    (error as any).digest === NEXT_PRERENDER_INTERRUPTED &&\n    'name' in error &&\n    'message' in error &&\n    error instanceof Error\n  )\n}\n\nexport function accessedDynamicData(\n  dynamicAccesses: Array<DynamicAccess>\n): boolean {\n  return dynamicAccesses.length > 0\n}\n\nexport function consumeDynamicAccess(\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n): DynamicTrackingState['dynamicAccesses'] {\n  // We mutate because we only call this once we are no longer writing\n  // to the dynamicTrackingState and it's more efficient than creating a new\n  // array.\n  serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses)\n  return serverDynamic.dynamicAccesses\n}\n\nexport function formatDynamicAPIAccesses(\n  dynamicAccesses: Array<DynamicAccess>\n): string[] {\n  return dynamicAccesses\n    .filter(\n      (access): access is Required<DynamicAccess> =>\n        typeof access.stack === 'string' && access.stack.length > 0\n    )\n    .map(({ expression, stack }) => {\n      stack = stack\n        .split('\\n')\n        // Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4)\n        .filter((line) => {\n          // Exclude Next.js internals from the stack trace.\n          if (line.includes('node_modules/next/')) {\n            return false\n          }\n\n          // Exclude anonymous functions from the stack trace.\n          if (line.includes(' (<anonymous>)')) {\n            return false\n          }\n\n          // Exclude Node.js internals from the stack trace.\n          if (line.includes(' (node:')) {\n            return false\n          }\n\n          return true\n        })\n        .join('\\n')\n      return `Dynamic API Usage Debug - ${expression}:\\n${stack}`\n    })\n}\n\nfunction assertPostpone() {\n  if (!hasPostpone) {\n    throw new Error(\n      `Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`\n    )\n  }\n}\n\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */\nexport function createRenderInBrowserAbortSignal(): AbortSignal {\n  const controller = new AbortController()\n  controller.abort(new BailoutToCSRError('Render in Browser'))\n  return controller.signal\n}\n\n/**\n * In a prerender, we may end up with hanging Promises as inputs due them\n * stalling on connection() or because they're loading dynamic data. In that\n * case we need to abort the encoding of arguments since they'll never complete.\n */\nexport function createHangingInputAbortSignal(\n  workUnitStore: WorkUnitStore\n): AbortSignal | undefined {\n  switch (workUnitStore.type) {\n    case 'prerender':\n    case 'prerender-runtime':\n      const controller = new AbortController()\n\n      if (workUnitStore.cacheSignal) {\n        // If we have a cacheSignal it means we're in a prospective render. If\n        // the input we're waiting on is coming from another cache, we do want\n        // to wait for it so that we can resolve this cache entry too.\n        workUnitStore.cacheSignal.inputReady().then(() => {\n          controller.abort()\n        })\n      } else {\n        // Otherwise we're in the final render and we should already have all\n        // our caches filled.\n        // If the prerender uses stages, we have wait until the runtime stage,\n        // at which point all runtime inputs will be resolved.\n        // (otherwise, a runtime prerender might consider `cookies()` hanging\n        //  even though they'd resolve in the next task.)\n        //\n        // We might still be waiting on some microtasks so we\n        // wait one tick before giving up. When we give up, we still want to\n        // render the content of this cache as deeply as we can so that we can\n        // suspend as deeply as possible in the tree or not at all if we don't\n        // end up waiting for the input.\n        const runtimeStagePromise = getRuntimeStagePromise(workUnitStore)\n        if (runtimeStagePromise) {\n          runtimeStagePromise.then(() =>\n            scheduleOnNextTick(() => controller.abort())\n          )\n        } else {\n          scheduleOnNextTick(() => controller.abort())\n        }\n      }\n\n      return controller.signal\n    case 'prerender-client':\n    case 'prerender-ppr':\n    case 'prerender-legacy':\n    case 'request':\n    case 'cache':\n    case 'private-cache':\n    case 'unstable-cache':\n      return undefined\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nexport function annotateDynamicAccess(\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n) {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function useDynamicRouteParams(expression: string) {\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workStore && workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender-client':\n      case 'prerender': {\n        const fallbackParams = workUnitStore.fallbackRouteParams\n        if (fallbackParams && fallbackParams.size > 0) {\n          // We are in a prerender with cacheComponents semantics. We are going to\n          // hang here and never resolve. This will cause the currently\n          // rendering component to effectively be a dynamic hole.\n          React.use(\n            makeHangingPromise(\n              workUnitStore.renderSignal,\n              workStore.route,\n              expression\n            )\n          )\n        }\n        break\n      }\n      case 'prerender-ppr': {\n        const fallbackParams = workUnitStore.fallbackRouteParams\n        if (fallbackParams && fallbackParams.size > 0) {\n          return postponeWithTracking(\n            workStore.route,\n            expression,\n            workUnitStore.dynamicTracking\n          )\n        }\n        break\n      }\n      case 'prerender-runtime':\n        throw new InvariantError(\n          `\\`${expression}\\` was called during a runtime prerender. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n        )\n      case 'cache':\n      case 'private-cache':\n        throw new InvariantError(\n          `\\`${expression}\\` was called inside a cache scope. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n        )\n      case 'prerender-legacy':\n      case 'request':\n      case 'unstable-cache':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n}\n\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/\n\n// Common implicit body tags that React will treat as body when placed directly in html\nconst bodyAndImplicitTags =\n  'body|div|main|section|article|aside|header|footer|nav|form|p|span|h1|h2|h3|h4|h5|h6'\n\n// Detects when RootLayoutBoundary (our framework marker component) appears\n// after Suspense in the component stack, indicating the root layout is wrapped\n// within a Suspense boundary. Ensures no body/html/implicit-body components are in between.\n//\n// Example matches:\n//   at Suspense (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\n//\n// Or with other components in between (but not body/html/implicit-body):\n//   at Suspense (<anonymous>)\n//   at SomeComponent (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\nconst hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex = new RegExp(\n  `\\\\n\\\\s+at Suspense \\\\(<anonymous>\\\\)(?:(?!\\\\n\\\\s+at (?:${bodyAndImplicitTags}) \\\\(<anonymous>\\\\))[\\\\s\\\\S])*?\\\\n\\\\s+at ${ROOT_LAYOUT_BOUNDARY_NAME} \\\\([^\\\\n]*\\\\)`\n)\n\nconst hasMetadataRegex = new RegExp(\n  `\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasViewportRegex = new RegExp(\n  `\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`)\n\nexport function trackAllowedDynamicAccess(\n  workStore: WorkStore,\n  componentStack: string,\n  dynamicValidation: DynamicValidationState,\n  clientDynamic: DynamicTrackingState\n) {\n  if (hasOutletRegex.test(componentStack)) {\n    // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n    return\n  } else if (hasMetadataRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicMetadata = true\n    return\n  } else if (hasViewportRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicViewport = true\n    return\n  } else if (\n    hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex.test(\n      componentStack\n    )\n  ) {\n    // For Suspense within body, the prelude wouldn't be empty so it wouldn't violate the empty static shells rule.\n    // But if you have Suspense above body, the prelude is empty but we allow that because having Suspense\n    // is an explicit signal from the user that they acknowledge the empty shell and want dynamic rendering.\n    dynamicValidation.hasAllowedDynamic = true\n    dynamicValidation.hasSuspenseAboveBody = true\n    return\n  } else if (hasSuspenseRegex.test(componentStack)) {\n    // this error had a Suspense boundary above it so we don't need to report it as a source\n    // of disallowed\n    dynamicValidation.hasAllowedDynamic = true\n    return\n  } else if (clientDynamic.syncDynamicErrorWithStack) {\n    // This task was the task that called the sync error.\n    dynamicValidation.dynamicErrors.push(\n      clientDynamic.syncDynamicErrorWithStack\n    )\n    return\n  } else {\n    const message = `Route \"${workStore.route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`\n    const error = createErrorWithComponentOrOwnerStack(message, componentStack)\n    dynamicValidation.dynamicErrors.push(error)\n    return\n  }\n}\n\n/**\n * In dev mode, we prefer using the owner stack, otherwise the provided\n * component stack is used.\n */\nfunction createErrorWithComponentOrOwnerStack(\n  message: string,\n  componentStack: string\n) {\n  const ownerStack =\n    process.env.NODE_ENV !== 'production' && React.captureOwnerStack\n      ? React.captureOwnerStack()\n      : null\n\n  const error = new Error(message)\n  error.stack = error.name + ': ' + message + (ownerStack ?? componentStack)\n  return error\n}\n\nexport enum PreludeState {\n  Full = 0,\n  Empty = 1,\n  Errored = 2,\n}\n\nexport function logDisallowedDynamicError(\n  workStore: WorkStore,\n  error: Error\n): void {\n  console.error(error)\n\n  if (!workStore.dev) {\n    if (workStore.hasReadableErrorStacks) {\n      console.error(\n        `To get a more detailed stack trace and pinpoint the issue, start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.`\n      )\n    } else {\n      console.error(`To get a more detailed stack trace and pinpoint the issue, try one of the following:\n  - Start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.\n  - Rerun the production build with \\`next build --debug-prerender\\` to generate better stack traces.`)\n    }\n  }\n}\n\nexport function throwIfDisallowedDynamic(\n  workStore: WorkStore,\n  prelude: PreludeState,\n  dynamicValidation: DynamicValidationState,\n  serverDynamic: DynamicTrackingState\n): void {\n  if (prelude !== PreludeState.Full) {\n    if (dynamicValidation.hasSuspenseAboveBody) {\n      // This route has opted into allowing fully dynamic rendering\n      // by including a Suspense boundary above the body. In this case\n      // a lack of a shell is not considered disallowed so we simply return\n      return\n    }\n\n    if (serverDynamic.syncDynamicErrorWithStack) {\n      // There is no shell and the server did something sync dynamic likely\n      // leading to an early termination of the prerender before the shell\n      // could be completed. We terminate the build/validating render.\n      logDisallowedDynamicError(\n        workStore,\n        serverDynamic.syncDynamicErrorWithStack\n      )\n      throw new StaticGenBailoutError()\n    }\n\n    // We didn't have any sync bailouts but there may be user code which\n    // blocked the root. We would have captured these during the prerender\n    // and can log them here and then terminate the build/validating render\n    const dynamicErrors = dynamicValidation.dynamicErrors\n    if (dynamicErrors.length > 0) {\n      for (let i = 0; i < dynamicErrors.length; i++) {\n        logDisallowedDynamicError(workStore, dynamicErrors[i])\n      }\n\n      throw new StaticGenBailoutError()\n    }\n\n    // If we got this far then the only other thing that could be blocking\n    // the root is dynamic Viewport. If this is dynamic then\n    // you need to opt into that by adding a Suspense boundary above the body\n    // to indicate your are ok with fully dynamic rendering.\n    if (dynamicValidation.hasDynamicViewport) {\n      console.error(\n        `Route \"${workStore.route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) without explicitly allowing fully dynamic rendering. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-viewport`\n      )\n      throw new StaticGenBailoutError()\n    }\n\n    if (prelude === PreludeState.Empty) {\n      // If we ever get this far then we messed up the tracking of invalid dynamic.\n      // We still adhere to the constraint that you must produce a shell but invite the\n      // user to report this as a bug in Next.js.\n      console.error(\n        `Route \"${workStore.route}\" did not produce a static shell and Next.js was unable to determine a reason. This is a bug in Next.js.`\n      )\n      throw new StaticGenBailoutError()\n    }\n  } else {\n    if (\n      dynamicValidation.hasAllowedDynamic === false &&\n      dynamicValidation.hasDynamicMetadata\n    ) {\n      console.error(\n        `Route \"${workStore.route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) when the rest of the route does not. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-metadata`\n      )\n      throw new StaticGenBailoutError()\n    }\n  }\n}\n\nexport function delayUntilRuntimeStage<T>(\n  prerenderStore: PrerenderStoreModernRuntime,\n  result: Promise<T>\n): Promise<T> {\n  if (prerenderStore.runtimeStagePromise) {\n    return prerenderStore.runtimeStagePromise.then(() => result)\n  }\n  return result\n}\n","import { isHangingPromiseRejectionError } from '../../server/dynamic-rendering-utils'\nimport { isPostpone } from '../../server/lib/router-utils/is-postpone'\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { isNextRouterError } from './is-next-router-error'\nimport { isDynamicPostpone } from '../../server/app-render/dynamic-rendering'\nimport { isDynamicServerError } from './hooks-server-context'\n\nexport function unstable_rethrow(error: unknown): void {\n  if (\n    isNextRouterError(error) ||\n    isBailoutToCSRError(error) ||\n    isDynamicServerError(error) ||\n    isDynamicPostpone(error) ||\n    isPostpone(error) ||\n    isHangingPromiseRejectionError(error)\n  ) {\n    throw error\n  }\n\n  if (error instanceof Error && 'cause' in error) {\n    unstable_rethrow(error.cause)\n  }\n}\n","/**\n * This function should be used to rethrow internal Next.js errors so that they can be handled by the framework.\n * When wrapping an API that uses errors to interrupt control flow, you should use this function before you do any error handling.\n * This function will rethrow the error if it is a Next.js error so it can be handled, otherwise it will do nothing.\n *\n * Read more: [Next.js Docs: `unstable_rethrow`](https://nextjs.org/docs/app/api-reference/functions/unstable_rethrow)\n */\nexport const unstable_rethrow =\n  typeof window === 'undefined'\n    ? (\n        require('./unstable-rethrow.server') as typeof import('./unstable-rethrow.server')\n      ).unstable_rethrow\n    : (\n        require('./unstable-rethrow.browser') as typeof import('./unstable-rethrow.browser')\n      ).unstable_rethrow\n","/** @internal */\nclass ReadonlyURLSearchParamsError extends Error {\n  constructor() {\n    super(\n      'Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams'\n    )\n  }\n}\n\nclass ReadonlyURLSearchParams extends URLSearchParams {\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  append() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  delete() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  set() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  sort() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n}\n\nexport function unstable_isUnrecognizedActionError(): boolean {\n  throw new Error(\n    '`unstable_isUnrecognizedActionError` can only be used on the client.'\n  )\n}\n\nexport { redirect, permanentRedirect } from './redirect'\nexport { RedirectType } from './redirect-error'\nexport { notFound } from './not-found'\nexport { forbidden } from './forbidden'\nexport { unauthorized } from './unauthorized'\nexport { unstable_rethrow } from './unstable-rethrow'\nexport { ReadonlyURLSearchParams }\n","export * from '../client/components/navigation.react-server'\n","export function deprecate(fn) {\n  return fn\n}\n\nexport function equal() {}\n\nexport function ok() {}\n\nexport function unreachable() {}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return '\\u001B[33m' + d + '\\u001B[39m'\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @import {Nodes, Parents, PhrasingContent, Root, Text} from 'mdast'\n * @import {BuildVisitor, Test, VisitorResult} from 'unist-util-visit-parents'\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, \" \")\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","/**\n * @import {\n *   CompileContext,\n *   Extension as FromMarkdownExtension,\n *   Handle as FromMarkdownHandle\n * } from 'mdast-util-from-markdown'\n * @import {ToMarkdownOptions} from 'mdast-util-gfm-footnote'\n * @import {\n *   Handle as ToMarkdownHandle,\n *   Map,\n *   Options as ToMarkdownExtension\n * } from 'mdast-util-to-markdown'\n * @import {FootnoteDefinition, FootnoteReference} from 'mdast'\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {after: ']', before: value})\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteCallString: enterFootnoteCallString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: enterFootnoteDefinition\n    },\n    exit: {\n      gfmFootnoteCallString: exitFootnoteCallString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: exitFootnoteDefinition\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown(options) {\n  // To do: next major: change default.\n  let firstLineBlank = false\n\n  if (options && options.firstLineBlank) {\n    firstLineBlank = true\n  }\n\n  return {\n    handlers: {footnoteDefinition, footnoteReference},\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['label', 'phrasing', 'reference']}]\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, state, info) {\n    const tracker = state.createTracker(info)\n    let value = tracker.move('[^')\n    const exit = state.enter('footnoteDefinition')\n    const subexit = state.enter('label')\n    value += tracker.move(\n      state.safe(state.associationId(node), {before: value, after: ']'})\n    )\n    subexit()\n\n    value += tracker.move(']:')\n\n    if (node.children && node.children.length > 0) {\n      tracker.shift(4)\n\n      value += tracker.move(\n        (firstLineBlank ? '\\n' : ' ') +\n          state.indentLines(\n            state.containerFlow(node, tracker.current()),\n            firstLineBlank ? mapAll : mapExceptFirst\n          )\n      )\n    }\n\n    exit()\n\n    return value\n  }\n}\n\n/** @type {Map} */\nfunction mapExceptFirst(line, index, blank) {\n  return index === 0 ? line : mapAll(line, index, blank)\n}\n\n/** @type {Map} */\nfunction mapAll(line, index, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","// To do: next major: remove.\n/**\n * @typedef {Options} MarkdownTableOptions\n *   Configuration.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [alignDelimiters=true]\n *   Whether to align the delimiters (default: `true`);\n *   they are aligned by default:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {ReadonlyArray<string | null | undefined> | string | null | undefined} [align]\n *   How to align columns (default: `''`);\n *   one style for all columns or styles for their respective columns;\n *   each style is either `'l'` (left), `'r'` (right), or `'c'` (center);\n *   other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left;\n *   *only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean | null | undefined} [delimiterEnd=true]\n *   Whether to end each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean | null | undefined} [delimiterStart=true]\n *   Whether to begin each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean | null | undefined} [padding=true]\n *   Whether to add a space of padding between delimiters and cells\n *   (default: `true`).\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {((value: string) => number) | null | undefined} [stringLength]\n *   Function to detect the length of table cell content (optional);\n *   this is used when aligning the delimiters (`|`) between table cells;\n *   full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source;\n *   to fix this, you can pass this function,\n *   which receives the cell content and returns its “visible” size;\n *   note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @param {string} value\n *   Cell value.\n * @returns {number}\n *   Cell size.\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * Generate a markdown\n * ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables))\n * table.\n *\n * @param {ReadonlyArray<ReadonlyArray<string | null | undefined>>} table\n *   Table data (matrix of strings).\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Result.\n */\nexport function markdownTable(table, options) {\n  const settings = options || {}\n  // To do: next major: change to spread.\n  const align = (settings.align || []).concat()\n  const stringLength = settings.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (settings.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      settings.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (settings.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (settings.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (settings.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        settings.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(settings.alignDelimiters === false && cell === '') &&\n        (settings.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (settings.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (settings.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (settings.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        settings.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      settings.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string | null | undefined} [value]\n *   Value to serialize.\n * @returns {string}\n *   Result.\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string | null | undefined} value\n *   Value.\n * @returns {number}\n *   Alignment.\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n      ? 108 /* `l` */\n      : code === 82 /* `R` */ || code === 114 /* `r` */\n        ? 114 /* `r` */\n        : 0\n}\n","/**\n * @import {Blockquote, Parents} from 'mdast'\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @import {Break, Parents} from 'mdast'\n * @import {Info, State} from 'mdast-util-to-markdown'\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Code} from 'mdast'\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {Code, Parents} from 'mdast'\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Definition, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * Encode a code point as a character reference.\n *\n * @param {number} code\n *   Code point to encode.\n * @returns {string}\n *   Encoded character reference.\n */\nexport function encodeCharacterReference(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","/**\n * @import {EncodeSides} from '../types.js'\n */\n\nimport {classifyCharacter} from 'micromark-util-classify-character'\n\n/**\n * Check whether to encode (as a character reference) the characters\n * surrounding an attention run.\n *\n * Which characters are around an attention run influence whether it works or\n * not.\n *\n * See <https://github.com/orgs/syntax-tree/discussions/60> for more info.\n * See this markdown in a particular renderer to see what works:\n *\n * ```markdown\n * |                         | A (letter inside) | B (punctuation inside) | C (whitespace inside) | D (nothing inside) |\n * | ----------------------- | ----------------- | ---------------------- | --------------------- | ------------------ |\n * | 1 (letter outside)      | x*y*z             | x*.*z                  | x* *z                 | x**z               |\n * | 2 (punctuation outside) | .*y*.             | .*.*.                  | .* *.                 | .**.               |\n * | 3 (whitespace outside)  | x *y* z           | x *.* z                | x * * z               | x ** z             |\n * | 4 (nothing outside)     | *x*               | *.*                    | * *                   | **                 |\n * ```\n *\n * @param {number} outside\n *   Code point on the outer side of the run.\n * @param {number} inside\n *   Code point on the inner side of the run.\n * @param {'*' | '_'} marker\n *   Marker of the run.\n *   Underscores are handled more strictly (they form less often) than\n *   asterisks.\n * @returns {EncodeSides}\n *   Whether to encode characters.\n */\n// Important: punctuation must never be encoded.\n// Punctuation is solely used by markdown constructs.\n// And by encoding itself.\n// Encoding them will break constructs or double encode things.\nexport function encodeInfo(outside, inside, marker) {\n  const outsideKind = classifyCharacter(outside)\n  const insideKind = classifyCharacter(inside)\n\n  // Letter outside:\n  if (outsideKind === undefined) {\n    return insideKind === undefined\n      ? // Letter inside:\n        // we have to encode *both* letters for `_` as it is looser.\n        // it already forms for `*` (and GFMs `~`).\n        marker === '_'\n        ? {inside: true, outside: true}\n        : {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (letter, whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: encode outer (letter)\n          {inside: false, outside: true}\n  }\n\n  // Whitespace outside:\n  if (outsideKind === 1) {\n    return insideKind === undefined\n      ? // Letter inside: already forms.\n        {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: already forms.\n          {inside: false, outside: false}\n  }\n\n  // Punctuation outside:\n  return insideKind === undefined\n    ? // Letter inside: already forms.\n      {inside: false, outside: false}\n    : insideKind === 1\n      ? // Whitespace inside: encode inner (whitespace).\n        {inside: true, outside: false}\n      : // Punctuation inside: already forms.\n        {inside: false, outside: false}\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Emphasis, Parents} from 'mdast'\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nemphasis.peek = emphasisPeek\n\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Heading} from 'mdast'\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Heading, Parents} from 'mdast'\n */\n\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value = encodeCharacterReference(value.charCodeAt(0)) + value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @import {Html} from 'mdast'\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Image, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {ImageReference, Parents} from 'mdast'\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {InlineCode, Parents} from 'mdast'\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Link} from 'mdast'\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Link, Parents} from 'mdast'\n * @import {Exit} from '../types.js'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {LinkReference, Parents} from 'mdast'\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {List, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {ListItem, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Paragraph, Parents} from 'mdast'\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Root} from 'mdast'\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n\n  const container = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return container.call(state, node, info)\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Strong} from 'mdast'\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nstrong.peek = strongPeek\n\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker + marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker + marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Text} from 'mdast'\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Parents, ThematicBreak} from 'mdast'\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @import {Extension as FromMarkdownExtension} from 'mdast-util-from-markdown'\n * @import {Options} from 'mdast-util-gfm'\n * @import {Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(options),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiControl, markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n};\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n};\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n};\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n};\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\n\n/** @type {ConstructRecord} */\nconst text = {};\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  };\n}\n\n/** @type {Code} */\nlet code = 48;\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++;\n  if (code === 58) code = 65;else if (code === 91) code = 97;\n}\ntext[43] = emailAutolink;\ntext[45] = emailAutolink;\ntext[46] = emailAutolink;\ntext[95] = emailAutolink;\ntext[72] = [emailAutolink, protocolAutolink];\ntext[104] = [emailAutolink, protocolAutolink];\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this;\n  /** @type {boolean | undefined} */\n  let dot;\n  /** @type {boolean} */\n  let data;\n  return start;\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (!gfmAtext(code) || !previousEmail.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    }\n    if (code === 64) {\n      effects.consume(code);\n      return emailDomain;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(emailDomainDotTrail, emailDomainAfter, emailDomainDot)(code);\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true;\n      effects.consume(code);\n      return emailDomain;\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code);\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code);\n    dot = true;\n    return emailDomain;\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this;\n  return wwwStart;\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (code !== 87 && code !== 119 || !previousWww.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww');\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(wwwPrefix, effects.attempt(domain, effects.attempt(path, wwwAfter), nok), nok)(code);\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this;\n  let buffer = '';\n  let seen = false;\n  return protocolStart;\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if ((code === 72 || code === 104) && previousProtocol.call(self, self.previous) && !previousUnbalanced(self.events)) {\n      effects.enter('literalAutolink');\n      effects.enter('literalAutolinkHttp');\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase();\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code);\n        return protocolSlashesInside;\n      }\n    }\n    return nok(code);\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code);\n      if (seen) {\n        return afterProtocol;\n      }\n      seen = true;\n      return protocolSlashesInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null || asciiControl(code) || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code);\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0;\n  return wwwPrefixInside;\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++;\n      effects.consume(code);\n      return wwwPrefixInside;\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code);\n      return wwwPrefixAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code);\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment;\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment;\n  /** @type {boolean | undefined} */\n  let seen;\n  return domainInside;\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code);\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || code !== 45 && unicodePunctuation(code)) {\n      return domainAfter(code);\n    }\n    seen = true;\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true;\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment;\n      underscoreInLastSegment = undefined;\n    }\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code);\n    }\n    return ok(code);\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0;\n  let sizeClose = 0;\n  return pathInside;\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++;\n      effects.consume(code);\n      return pathInside;\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code);\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (code === 33 || code === 34 || code === 38 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 60 || code === 63 || code === 93 || code === 95 || code === 126) {\n      return effects.check(trail, ok, pathAtPunctuation)(code);\n    }\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++;\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail;\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (code === 33 || code === 34 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 63 || code === 95 || code === 126) {\n      effects.consume(code);\n      return trail;\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code);\n      return trailCharacterReferenceStart;\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code);\n      return trailBracketAfter;\n    }\n    if (\n    // `<` is an end.\n    code === 60 ||\n    // So is whitespace.\n    code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (code === null || code === 40 || code === 91 || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return trail(code);\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code);\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code);\n      return trail;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return trailCharacterReferenceInside;\n    }\n\n    // It’s not a trail.\n    return nok(code);\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start;\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code);\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return code === null || code === 40 || code === 42 || code === 95 || code === 91 || code === 93 || code === 126 || markdownLineEndingOrSpace(code);\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code);\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code));\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return code === 43 || code === 45 || code === 46 || code === 95 || asciiAlphanumeric(code);\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length;\n  let result = false;\n  while (index--) {\n    const token = events[index][1];\n    if ((token.type === 'labelLink' || token.type === 'labelImage') && !token._balanced) {\n      result = true;\n      break;\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false;\n      break;\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n  }\n  return result;\n}","const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n *   Value to encode.\n * @returns {string}\n *   Encoded value.\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   *   Value to replace.\n   * @returns {string}\n   *   Encoded value.\n   */\n  function replace(value) {\n    return (\n      '&' +\n      characterReferences[\n        /** @type {keyof typeof characterReferences} */ (value)\n      ] +\n      ';'\n    )\n  }\n}\n","import { asciiAlphanumeric } from 'micromark-util-character';\nimport { encode } from 'micromark-util-encode';\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''));\n  if (!protocol) {\n    return value;\n  }\n  const colon = value.indexOf(':');\n  const questionMark = value.indexOf('?');\n  const numberSign = value.indexOf('#');\n  const slash = value.indexOf('/');\n  if (\n  // If there is no protocol, it’s relative.\n  colon < 0 ||\n  // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign ||\n  // It is a protocol, it should be allowed.\n  protocol.test(value.slice(0, colon))) {\n    return value;\n  }\n  return '';\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = [];\n  let index = -1;\n  let start = 0;\n  let skip = 0;\n  while (++index < value.length) {\n    const code = value.charCodeAt(index);\n    /** @type {string} */\n    let replace = '';\n\n    // A correct percent encoded value.\n    if (code === 37 && asciiAlphanumeric(value.charCodeAt(index + 1)) && asciiAlphanumeric(value.charCodeAt(index + 2))) {\n      skip = 2;\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code);\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1);\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next);\n        skip = 1;\n      }\n      // Lone surrogate.\n      else {\n        replace = \"\\uFFFD\";\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code);\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace));\n      start = index + skip + 1;\n      replace = '';\n    }\n    if (skip) {\n      index += skip;\n      skip = 0;\n    }\n  }\n  return result.join('') + value.slice(start);\n}","/**\n * @import {CompileContext, Handle, HtmlExtension, Token} from 'micromark-util-types'\n */\n\nimport { sanitizeUri } from 'micromark-util-sanitize-uri';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub autolink literal\n * when serializing to HTML.\n *\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GitHub autolink literal when serializing to HTML.\n */\nexport function gfmAutolinkLiteralHtml() {\n  return {\n    exit: {\n      literalAutolinkEmail,\n      literalAutolinkHttp,\n      literalAutolinkWww\n    }\n  };\n}\n\n/**\n * @this {CompileContext}\n * @type {Handle}\n */\nfunction literalAutolinkWww(token) {\n  anchorFromToken.call(this, token, 'http://');\n}\n\n/**\n * @this {CompileContext}\n * @type {Handle}\n */\nfunction literalAutolinkEmail(token) {\n  anchorFromToken.call(this, token, 'mailto:');\n}\n\n/**\n * @this {CompileContext}\n * @type {Handle}\n */\nfunction literalAutolinkHttp(token) {\n  anchorFromToken.call(this, token);\n}\n\n/**\n * @this CompileContext\n * @param {Token} token\n * @param {string | null | undefined} [protocol]\n * @returns {undefined}\n */\nfunction anchorFromToken(token, protocol) {\n  const url = this.sliceSerialize(token);\n  this.tag('<a href=\"' + sanitizeUri((protocol || '') + url) + '\">');\n  this.raw(this.encode(url));\n  this.tag('</a>');\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { blankLine } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  };\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {Token} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1];\n    if (token.type === \"labelImage\") {\n      labelStart = token;\n      break;\n    }\n\n    // Exit if we’ve walked far enough.\n    if (token.type === 'gfmFootnoteCall' || token.type === \"labelLink\" || token.type === \"label\" || token.type === \"image\" || token.type === \"link\") {\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code);\n    }\n    const id = normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    }));\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code);\n    }\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return ok(code);\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length;\n  /** @type {Token | undefined} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    if (events[index][1].type === \"labelImage\" && events[index][0] === 'enter') {\n      labelStart = events[index][1];\n      break;\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = \"data\";\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker';\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  };\n  // Increment the end 1 character.\n  marker.end.column++;\n  marker.end.offset++;\n  marker.end._bufferIndex++;\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  };\n  /** @type {Token} */\n  const chunk = {\n    type: \"chunkString\",\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  };\n\n  /** @type {Array<Event>} */\n  const replacement = [\n  // Take the `labelImageMarker` (now `data`, the `!`)\n  events[index + 1], events[index + 2], ['enter', call, context],\n  // The `[`\n  events[index + 3], events[index + 4],\n  // The `^`.\n  ['enter', marker, context], ['exit', marker, context],\n  // Everything in between.\n  ['enter', string, context], ['enter', chunk, context], ['exit', chunk, context], ['exit', string, context],\n  // The ending (`]`, properly parsed and labelled).\n  events[events.length - 2], events[events.length - 1], ['exit', call, context]];\n  events.splice(index, events.length - index + 1, ...replacement);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  let size = 0;\n  /** @type {boolean} */\n  let data;\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start;\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall');\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return callStart;\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code);\n    effects.enter('gfmFootnoteCallMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallMarker');\n    effects.enter('gfmFootnoteCallString');\n    effects.enter('chunkString').contentType = 'string';\n    return callData;\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteCallString');\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code);\n      }\n      effects.enter('gfmFootnoteCallLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteCallLabelMarker');\n      effects.exit('gfmFootnoteCall');\n      return ok;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? callEscape : callData;\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return callData;\n    }\n    return callData(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {string} */\n  let identifier;\n  let size = 0;\n  /** @type {boolean | undefined} */\n  let data;\n  return start;\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true;\n    effects.enter('gfmFootnoteDefinitionLabel');\n    effects.enter('gfmFootnoteDefinitionLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteDefinitionLabelMarker');\n    return labelAtMarker;\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionMarker');\n      effects.enter('gfmFootnoteDefinitionLabelString');\n      effects.enter('chunkString').contentType = 'string';\n      return labelInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteDefinitionLabelString');\n      identifier = normalizeIdentifier(self.sliceSerialize(token));\n      effects.enter('gfmFootnoteDefinitionLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionLabelMarker');\n      effects.exit('gfmFootnoteDefinitionLabel');\n      return labelAfter;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      if (!defined.includes(identifier)) {\n        defined.push(identifier);\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(effects, whitespaceAfter, 'gfmFootnoteDefinitionWhitespace');\n    }\n    return nok(code);\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok));\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition');\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'gfmFootnoteDefinitionIndent', 4 + 1);\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'gfmFootnoteDefinitionIndent' && tail[2].sliceSerialize(tail[1], true).length === 4 ? ok(code) : nok(code);\n  }\n}","/**\n * @import {HtmlOptions as Options} from 'micromark-extension-gfm-footnote'\n * @import {HtmlExtension} from 'micromark-util-types'\n */\n\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { sanitizeUri } from 'micromark-util-sanitize-uri';\nconst own = {}.hasOwnProperty;\n\n/** @type {Options} */\nconst emptyOptions = {};\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Default label.\n */\nexport function defaultBackLabel(referenceIndex, rereferenceIndex) {\n  return 'Back to reference ' + (referenceIndex + 1) + (rereferenceIndex > 1 ? '-' + rereferenceIndex : '');\n}\n\n/**\n * Create an extension for `micromark` to support GFM footnotes when\n * serializing to HTML.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration (optional).\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM footnotes when serializing to HTML.\n */\nexport function gfmFootnoteHtml(options) {\n  const config = options || emptyOptions;\n  const label = config.label || 'Footnotes';\n  const labelTagName = config.labelTagName || 'h2';\n  const labelAttributes = config.labelAttributes === null || config.labelAttributes === undefined ? 'class=\"sr-only\"' : config.labelAttributes;\n  const backLabel = config.backLabel || defaultBackLabel;\n  const clobberPrefix = config.clobberPrefix === null || config.clobberPrefix === undefined ? 'user-content-' : config.clobberPrefix;\n  return {\n    enter: {\n      gfmFootnoteDefinition() {\n        const stack = this.getData('tightStack');\n        stack.push(false);\n      },\n      gfmFootnoteDefinitionLabelString() {\n        this.buffer();\n      },\n      gfmFootnoteCallString() {\n        this.buffer();\n      }\n    },\n    exit: {\n      gfmFootnoteDefinition() {\n        let definitions = this.getData('gfmFootnoteDefinitions');\n        const footnoteStack = this.getData('gfmFootnoteDefinitionStack');\n        const tightStack = this.getData('tightStack');\n        const current = footnoteStack.pop();\n        const value = this.resume();\n        if (!definitions) {\n          this.setData('gfmFootnoteDefinitions', definitions = {});\n        }\n        if (!own.call(definitions, current)) definitions[current] = value;\n        tightStack.pop();\n        this.setData('slurpOneLineEnding', true);\n        // “Hack” to prevent a line ending from showing up if we’re in a definition in\n        // an empty list item.\n        this.setData('lastWasTag');\n      },\n      gfmFootnoteDefinitionLabelString(token) {\n        let footnoteStack = this.getData('gfmFootnoteDefinitionStack');\n        if (!footnoteStack) {\n          this.setData('gfmFootnoteDefinitionStack', footnoteStack = []);\n        }\n        footnoteStack.push(normalizeIdentifier(this.sliceSerialize(token)));\n        this.resume(); // Drop the label.\n        this.buffer(); // Get ready for a value.\n      },\n      gfmFootnoteCallString(token) {\n        let calls = this.getData('gfmFootnoteCallOrder');\n        let counts = this.getData('gfmFootnoteCallCounts');\n        const id = normalizeIdentifier(this.sliceSerialize(token));\n        /** @type {number} */\n        let counter;\n        this.resume();\n        if (!calls) this.setData('gfmFootnoteCallOrder', calls = []);\n        if (!counts) this.setData('gfmFootnoteCallCounts', counts = {});\n        const index = calls.indexOf(id);\n        const safeId = sanitizeUri(id.toLowerCase());\n        if (index === -1) {\n          calls.push(id);\n          counts[id] = 1;\n          counter = calls.length;\n        } else {\n          counts[id]++;\n          counter = index + 1;\n        }\n        const reuseCounter = counts[id];\n        this.tag('<sup><a href=\"#' + clobberPrefix + 'fn-' + safeId + '\" id=\"' + clobberPrefix + 'fnref-' + safeId + (reuseCounter > 1 ? '-' + reuseCounter : '') + '\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">' + String(counter) + '</a></sup>');\n      },\n      null() {\n        const calls = this.getData('gfmFootnoteCallOrder') || [];\n        const counts = this.getData('gfmFootnoteCallCounts') || {};\n        const definitions = this.getData('gfmFootnoteDefinitions') || {};\n        let index = -1;\n        if (calls.length > 0) {\n          this.lineEndingIfNeeded();\n          this.tag('<section data-footnotes=\"\" class=\"footnotes\"><' + labelTagName + ' id=\"footnote-label\"' + (labelAttributes ? ' ' + labelAttributes : '') + '>');\n          this.raw(this.encode(label));\n          this.tag('</' + labelTagName + '>');\n          this.lineEndingIfNeeded();\n          this.tag('<ol>');\n        }\n        while (++index < calls.length) {\n          // Called definitions are always defined.\n          const id = calls[index];\n          const safeId = sanitizeUri(id.toLowerCase());\n          let referenceIndex = 0;\n          /** @type {Array<string>} */\n          const references = [];\n          while (++referenceIndex <= counts[id]) {\n            references.push('<a href=\"#' + clobberPrefix + 'fnref-' + safeId + (referenceIndex > 1 ? '-' + referenceIndex : '') + '\" data-footnote-backref=\"\" aria-label=\"' + this.encode(typeof backLabel === 'string' ? backLabel : backLabel(index, referenceIndex)) + '\" class=\"data-footnote-backref\">↩' + (referenceIndex > 1 ? '<sup>' + referenceIndex + '</sup>' : '') + '</a>');\n          }\n          const reference = references.join(' ');\n          let injected = false;\n          this.lineEndingIfNeeded();\n          this.tag('<li id=\"' + clobberPrefix + 'fn-' + safeId + '\">');\n          this.lineEndingIfNeeded();\n          this.tag(definitions[id].replace(/<\\/p>(?:\\r?\\n|\\r)?$/, function ($0) {\n            injected = true;\n            return ' ' + reference + $0;\n          }));\n          if (!injected) {\n            this.lineEndingIfNeeded();\n            this.tag(reference);\n          }\n          this.lineEndingIfNeeded();\n          this.tag('</li>');\n        }\n        if (calls.length > 0) {\n          this.lineEndingIfNeeded();\n          this.tag('</ol>');\n          this.lineEndingIfNeeded();\n          this.tag('</section>');\n        }\n      }\n    }\n  };\n}","/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {};\n  let single = options_.singleTilde;\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1;\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        let open = index;\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            };\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]];\n            const insideSpan = context.parser.constructs.insideSpan.null;\n            if (insideSpan) {\n              // Between.\n              splice(nextEvents, nextEvents.length, 0, resolveAll(insideSpan, events.slice(open + 1, index), context));\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = \"data\";\n      }\n    }\n    return events;\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous;\n    const events = this.events;\n    let size = 0;\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== \"characterEscape\") {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      const token = effects.exit('strikethroughSequenceTemporary');\n      const after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}","/**\n * @import {HtmlExtension} from 'micromark-util-types'\n */\n\n/**\n * Create an HTML extension for `micromark` to support GFM strikethrough when\n * serializing to HTML.\n *\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions`, to\n *   support GFM strikethrough when serializing to HTML.\n */\nexport function gfmStrikethroughHtml() {\n  return {\n    enter: {\n      strikethrough() {\n        this.tag('<del>');\n      }\n    },\n    exit: {\n      strikethrough() {\n        this.tag('</del>');\n      }\n    }\n  };\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = [];\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add);\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return;\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length;\n    /** @type {Array<Array<Event>>} */\n    const vecs = [];\n    while (index > 0) {\n      index -= 1;\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]), this.map[index][2]);\n\n      // Truncate rest.\n      events.length = this.map[index][0];\n    }\n    vecs.push(events.slice());\n    events.length = 0;\n    let slice = vecs.pop();\n    while (slice) {\n      for (const element of slice) {\n        events.push(element);\n      }\n      slice = vecs.pop();\n    }\n\n    // Truncate everything.\n    this.map.length = 0;\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0;\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return;\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove;\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add);\n      // }\n\n      return;\n    }\n    index += 1;\n  }\n  editMap.map.push([at, remove, add]);\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false;\n  /** @type {Array<Align>} */\n  const align = [];\n  while (index < events.length) {\n    const event = events[index];\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(events[index + 1][1].type === 'tableDelimiterMarker' ? 'left' : 'none');\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1;\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right';\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break;\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true;\n    }\n    index += 1;\n  }\n  return align;\n}","/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { EditMap } from './edit-map.js';\nimport { gfmTableAlign } from './infer.js';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        name: 'table',\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  let sizeB = 0;\n  /** @type {boolean | undefined} */\n  let seen;\n  return start;\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1;\n    while (index > -1) {\n      const type = self.events[index][1].type;\n      if (type === \"lineEnding\" ||\n      // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n      type === \"linePrefix\") index--;else break;\n    }\n    const tail = index > -1 ? self.events[index][1].type : null;\n    const next = tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore;\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    return next(code);\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead');\n    effects.enter('tableRow');\n    return headRowStart(code);\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code);\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true;\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1;\n    return headRowBreak(code);\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0;\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true;\n        effects.exit('tableRow');\n        effects.enter(\"lineEnding\");\n        effects.consume(code);\n        effects.exit(\"lineEnding\");\n        return headDelimiterStart;\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, \"whitespace\")(code);\n    }\n    sizeB += 1;\n    if (seen) {\n      seen = false;\n      // Header cell count.\n      size += 1;\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      // Whether a delimiter was seen.\n      seen = true;\n      return headRowBreak;\n    }\n\n    // Anything else is cell data.\n    effects.enter(\"data\");\n    return headRowData(code);\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return headRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? headRowEscape : headRowData;\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return headRowData;\n    }\n    return headRowData(code);\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false;\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    effects.enter('tableDelimiterRow');\n    // Track if we’ve seen a `:` or `|`.\n    seen = false;\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return headDelimiterBefore(code);\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code);\n    }\n    if (code === 124) {\n      seen = true;\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return headDelimiterCellBefore;\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, \"whitespace\")(code);\n    }\n    return headDelimiterValueBefore(code);\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1;\n      seen = true;\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterLeftAlignmentAfter;\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1;\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      return headDelimiterFiller(code);\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return headDelimiterFiller;\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true;\n      effects.exit('tableDelimiterFiller');\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterRightAlignmentAfter;\n    }\n    effects.exit('tableDelimiterFiller');\n    return headDelimiterRightAlignmentAfter(code);\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, \"whitespace\")(code);\n    }\n    return headDelimiterCellAfter(code);\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code);\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow');\n      effects.exit('tableHead');\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code);\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow');\n    return bodyRowBreak(code);\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return bodyRowBreak;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, \"whitespace\")(code);\n    }\n\n    // Anything else is cell content.\n    effects.enter(\"data\");\n    return bodyRowData(code);\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return bodyRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? bodyRowEscape : bodyRowData;\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return bodyRowData;\n    }\n    return bodyRowData(code);\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1;\n  let inFirstCellAwaitingPipe = true;\n  /** @type {RowKind} */\n  let rowKind = 0;\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0];\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0];\n  let afterHeadAwaitingFirstBodyRow = false;\n  let lastTableEnd = 0;\n  /** @type {Token | undefined} */\n  let currentTable;\n  /** @type {Token | undefined} */\n  let currentBody;\n  /** @type {Token | undefined} */\n  let currentCell;\n  const map = new EditMap();\n  while (++index < events.length) {\n    const event = events[index];\n    const token = event[1];\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false;\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n          currentBody = undefined;\n          lastTableEnd = 0;\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        };\n        map.add(index, 0, [['enter', currentTable, context]]);\n      } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n        inFirstCellAwaitingPipe = true;\n        currentCell = undefined;\n        lastCell = [0, 0, 0, 0];\n        cell = [0, index + 1, 0, 0];\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false;\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          };\n          map.add(index, 0, [['enter', currentBody, context]]);\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1;\n      }\n      // Cell data.\n      else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n        inFirstCellAwaitingPipe = false;\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n            lastCell = [0, 0, 0, 0];\n          }\n          cell[2] = index;\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false;\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n          }\n          lastCell = cell;\n          cell = [lastCell[1], index, 0, 0];\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true;\n      lastTableEnd = index;\n    } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n      lastTableEnd = index;\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1];\n        currentCell = flushCell(map, context, lastCell, rowKind, index, currentCell);\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell);\n      }\n      rowKind = 0;\n    } else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n      cell[3] = index;\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n  }\n  map.consume(context.events);\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1;\n  while (++index < context.events.length) {\n    const event = context.events[index];\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index);\n    }\n  }\n  return events;\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName = rowKind === 1 ? 'tableHeader' : rowKind === 2 ? 'tableDelimiter' : 'tableData';\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent';\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));\n    map.add(range[0], 0, [['exit', previousCell, context]]);\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1]);\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  };\n  map.add(range[1], 0, [['enter', previousCell, context]]);\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2]);\n    const relatedEnd = getPoint(context.events, range[3]);\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    };\n    map.add(range[2], 0, [['enter', valueToken, context]]);\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]];\n      const end = context.events[range[3]];\n      start[1].end = Object.assign({}, end[1].end);\n      start[1].type = \"chunkText\";\n      start[1].contentType = \"text\";\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1;\n        const b = range[3] - range[2] - 1;\n        map.add(a, b, []);\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]]);\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));\n    map.add(rowEnd, 0, [['exit', previousCell, context]]);\n    previousCell = undefined;\n  }\n  return previousCell;\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = [];\n  const related = getPoint(context.events, index);\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related);\n    exits.push(['exit', tableBody, context]);\n  }\n  table.end = Object.assign({}, related);\n  exits.push(['exit', table, context]);\n  map.add(index + 1, 0, exits);\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index];\n  const side = event[0] === 'enter' ? 'start' : 'end';\n  return event[1][side];\n}","/**\n * @import {HtmlExtension} from 'micromark-util-types'\n */\n\nconst alignment = {\n  none: '',\n  left: ' align=\"left\"',\n  right: ' align=\"right\"',\n  center: ' align=\"center\"'\n};\n\n// To do: micromark@5: use `infer` here, when all events are exposed.\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables when\n * serializing to HTML.\n *\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GitHub tables when serializing to HTML.\n */\nexport function gfmTableHtml() {\n  return {\n    enter: {\n      table(token) {\n        const tableAlign = token._align;\n        this.lineEndingIfNeeded();\n        this.tag('<table>');\n        this.setData('tableAlign', tableAlign);\n      },\n      tableBody() {\n        this.tag('<tbody>');\n      },\n      tableData() {\n        const tableAlign = this.getData('tableAlign');\n        const tableColumn = this.getData('tableColumn');\n        const align = alignment[tableAlign[tableColumn]];\n        if (align === undefined) {\n          // Capture results to ignore them.\n          this.buffer();\n        } else {\n          this.lineEndingIfNeeded();\n          this.tag('<td' + align + '>');\n        }\n      },\n      tableHead() {\n        this.lineEndingIfNeeded();\n        this.tag('<thead>');\n      },\n      tableHeader() {\n        const tableAlign = this.getData('tableAlign');\n        const tableColumn = this.getData('tableColumn');\n        const align = alignment[tableAlign[tableColumn]];\n        this.lineEndingIfNeeded();\n        this.tag('<th' + align + '>');\n      },\n      tableRow() {\n        this.setData('tableColumn', 0);\n        this.lineEndingIfNeeded();\n        this.tag('<tr>');\n      }\n    },\n    exit: {\n      // Overwrite the default code text data handler to unescape escaped pipes when\n      // they are in tables.\n      codeTextData(token) {\n        let value = this.sliceSerialize(token);\n        if (this.getData('tableAlign')) {\n          value = value.replace(/\\\\([\\\\|])/g, replace);\n        }\n        this.raw(this.encode(value));\n      },\n      table() {\n        this.setData('tableAlign');\n        // Note: we don’t set `slurpAllLineEndings` anymore, in delimiter rows,\n        // but we do need to reset it to match a funky newline GH generates for\n        // list items combined with tables.\n        this.setData('slurpAllLineEndings');\n        this.lineEndingIfNeeded();\n        this.tag('</table>');\n      },\n      tableBody() {\n        this.lineEndingIfNeeded();\n        this.tag('</tbody>');\n      },\n      tableData() {\n        const tableAlign = this.getData('tableAlign');\n        const tableColumn = this.getData('tableColumn');\n        if (tableColumn in tableAlign) {\n          this.tag('</td>');\n          this.setData('tableColumn', tableColumn + 1);\n        } else {\n          // Stop capturing.\n          this.resume();\n        }\n      },\n      tableHead() {\n        this.lineEndingIfNeeded();\n        this.tag('</thead>');\n      },\n      tableHeader() {\n        const tableColumn = this.getData('tableColumn');\n        this.tag('</th>');\n        this.setData('tableColumn', tableColumn + 1);\n      },\n      tableRow() {\n        const tableAlign = this.getData('tableAlign');\n        let tableColumn = this.getData('tableColumn');\n        while (tableColumn < tableAlign.length) {\n          this.lineEndingIfNeeded();\n          this.tag('<td' + alignment[tableAlign[tableColumn]] + '></td>');\n          tableColumn++;\n        }\n        this.setData('tableColumn', tableColumn);\n        this.lineEndingIfNeeded();\n        this.tag('</tr>');\n      }\n    }\n  };\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0;\n}","/**\n * @typedef {import('micromark-util-types').CompileContext} CompileContext\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n// An opening or closing tag start, followed by a case-insensitive specific tag name,\n// followed by HTML whitespace, a greater than, or a slash.\nconst reFlow =\n  /<(\\/?)(iframe|noembed|noframes|plaintext|script|style|title|textarea|xmp)(?=[\\t\\n\\f\\r />])/gi\n\n// As HTML (text) parses tags separately (and very strictly), we don’t need to be\n// global.\nconst reText = new RegExp('^' + reFlow.source, 'i')\n\n/**\n * Create an HTML extension for `micromark` to support GitHubs weird and\n * useless tagfilter when serializing to HTML.\n *\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to support\n *   GitHubs weird and useless tagfilter when serializing to HTML.\n */\nexport function gfmTagfilterHtml() {\n  return {\n    exit: {\n      htmlFlowData(token) {\n        exitHtmlData.call(this, token, reFlow)\n      },\n      htmlTextData(token) {\n        exitHtmlData.call(this, token, reText)\n      }\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @param {Token} token\n * @param {RegExp} filter\n * @returns {undefined}\n */\nfunction exitHtmlData(token, filter) {\n  let value = this.sliceSerialize(token)\n\n  if (this.options.allowDangerousHtml) {\n    value = value.replace(filter, '&lt;$1$2')\n  }\n\n  this.raw(this.encode(value))\n}\n","/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nconst tasklistCheck = {\n  name: 'tasklistCheck',\n  tokenize: tokenizeTasklistCheck\n};\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this;\n  return open;\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n    // Exit if there’s stuff before.\n    self.previous !== null ||\n    // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code);\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok)(code);\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, \"whitespace\");\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code);\n  }\n}","/**\n * @import {HtmlExtension} from 'micromark-util-types'\n */\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items when\n * serializing to HTML.\n *\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItemHtml() {\n  return {\n    enter: {\n      taskListCheck() {\n        this.tag('<input type=\"checkbox\" disabled=\"\" ');\n      }\n    },\n    exit: {\n      taskListCheck() {\n        this.tag('/>');\n      },\n      taskListCheckValueChecked() {\n        this.tag('checked=\"\" ');\n      }\n    }\n  };\n}","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @import {Root} from 'mdast'\n * @import {Options} from 'remark-gfm'\n * @import {} from 'remark-parse'\n * @import {} from 'remark-stringify'\n * @import {Processor} from 'unified'\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor<Root>} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n/**\n * Get the rank (`1` to `6`) of headings (`h1` to `h6`).\n *\n * @param {Nodes} node\n *   Node to check.\n * @returns {number | undefined}\n *   Rank of the heading or `undefined` if not a heading.\n */\nexport function headingRank(node) {\n  const name = node.type === 'element' ? node.tagName.toLowerCase() : ''\n  const code =\n    name.length === 2 && name.charCodeAt(0) === 104 /* `h` */\n      ? name.charCodeAt(1)\n      : 0\n  return code > 48 /* `0` */ && code < 55 /* `7` */\n    ? code - 48 /* `0` */\n    : undefined\n}\n","/**\n * @import {Nodes, Parents} from 'hast'\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Nodes} node\n *   Node to serialize.\n * @returns {string}\n *   Serialized node.\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Nodes} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Parents} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction all(node) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","// This module is generated by `script/`.\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\nexport const regex = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08C8-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B54\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1AC1-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31C0-\\u31EF\\u3200-\\u33FF\\u4DC0-\\u4DFF\\u9FFD-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7CB-\\uA7F4\\uA828-\\uA82B\\uA82D-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB6A-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDE7F\\uDEAA\\uDEAD-\\uDEAF\\uDEB2-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFAF\\uDFC5-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD48-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC62-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD36\\uDD39\\uDD3A\\uDD44-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFAF\\uDFB1-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D\\uD83F\\uD87B-\\uD87D\\uD87F\\uD885-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE5-\\uDFEF\\uDFF2-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD83E[\\uDC00-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEDE-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g\n","import { regex } from './regex.js'\n\nconst own = Object.hasOwnProperty\n\n/**\n * Slugger.\n */\nexport default class BananaSlug {\n  /**\n   * Create a new slug class.\n   */\n  constructor () {\n    /** @type {Record<string, number>} */\n    // eslint-disable-next-line no-unused-expressions\n    this.occurrences\n\n    this.reset()\n  }\n\n  /**\n   * Generate a unique slug.\n  *\n  * Tracks previously generated slugs: repeated calls with the same value\n  * will result in different slugs.\n  * Use the `slug` function to get same slugs.\n   *\n   * @param  {string} value\n   *   String of text to slugify\n   * @param  {boolean} [maintainCase=false]\n   *   Keep the current case, otherwise make all lowercase\n   * @return {string}\n   *   A unique slug string\n   */\n  slug (value, maintainCase) {\n    const self = this\n    let result = slug(value, maintainCase === true)\n    const originalSlug = result\n\n    while (own.call(self.occurrences, result)) {\n      self.occurrences[originalSlug]++\n      result = originalSlug + '-' + self.occurrences[originalSlug]\n    }\n\n    self.occurrences[result] = 0\n\n    return result\n  }\n\n  /**\n   * Reset - Forget all previous slugs\n   *\n   * @return void\n   */\n  reset () {\n    this.occurrences = Object.create(null)\n  }\n}\n\n/**\n * Generate a slug.\n *\n * Does not track previously generated slugs: repeated calls with the same value\n * will result in the exact same slug.\n * Use the `GithubSlugger` class to get unique slugs.\n *\n * @param  {string} value\n *   String of text to slugify\n * @param  {boolean} [maintainCase=false]\n *   Keep the current case, otherwise make all lowercase\n * @return {string}\n *   A unique slug string\n */\nexport function slug (value, maintainCase) {\n  if (typeof value !== 'string') return ''\n  if (!maintainCase) value = value.toLowerCase()\n  return value.replace(regex, '').replace(/ /g, '-')\n}\n","/**\n * @typedef {import('hast').Root} Root\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string} [prefix='']\n *   Prefix to add in front of `id`s (default: `''`).\n */\n\nimport GithubSlugger from 'github-slugger'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {toString} from 'hast-util-to-string'\nimport {visit} from 'unist-util-visit'\n\n/** @type {Options} */\nconst emptyOptions = {}\nconst slugs = new GithubSlugger()\n\n/**\n * Add `id`s to headings.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeSlug(options) {\n  const settings = options || emptyOptions\n  const prefix = settings.prefix || ''\n\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    slugs.reset()\n\n    visit(tree, 'element', function (node) {\n      if (headingRank(node) && !node.properties.id) {\n        node.properties.id = prefix + slugs.slug(toString(node))\n      }\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n      case 'ArrayBuffer':\n        return as(new Uint8Array(value).buffer, value);\n      case 'DataView': {\n        const { buffer } = new Uint8Array(value);\n        return as(new DataView(buffer), value);\n      }\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n    case 'DataView':\n      return [ARRAY, asString];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type) {\n          let spread = value;\n          if (type === 'DataView') {\n            spread = new Uint8Array(value.buffer);\n          }\n          else if (type === 'ArrayBuffer') {\n            spread = new Uint8Array(value);\n          }\n          return as([type, [...spread]], value);\n        }\n\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('hast-util-is-element').Test} Test\n */\n\n/**\n * @typedef {'after' | 'append' | 'before' | 'prepend' | 'wrap'} Behavior\n *   Behavior.\n *\n * @callback Build\n *   Generate content.\n * @param {Readonly<Element>} element\n *   Current heading.\n * @returns {Array<ElementContent> | ElementContent}\n *   Content.\n *\n * @callback BuildProperties\n *   Generate properties.\n * @param {Readonly<Element>} element\n *   Current heading.\n * @returns {Properties}\n *   Properties.\n *\n * @typedef Options\n *   Configuration.\n * @property {Behavior | null | undefined} [behavior='prepend']\n *   How to create links (default: `'prepend'`).\n * @property {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build | null | undefined} [content]\n *   Content to insert in the link (default: if `'wrap'` then `undefined`,\n *   otherwise `<span class=\"icon icon-link\"></span>`);\n *   if `behavior` is `'wrap'` and `Build` is passed, its result replaces the\n *   existing content, otherwise the content is added after existing content.\n * @property {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build | null | undefined} [group]\n *   Content to wrap the heading and link with, if `behavior` is `'after'` or\n *   `'before'` (optional).\n * @property {Readonly<Properties> | BuildProperties | null | undefined} [headingProperties]\n *   Extra properties to set on the heading (optional).\n * @property {Readonly<Properties> | BuildProperties | null | undefined} [properties]\n *   Extra properties to set on the link when injecting (default:\n *   `{ariaHidden: true, tabIndex: -1}` if `'append'` or `'prepend'`, otherwise\n *   `undefined`).\n * @property {Test | null | undefined} [test]\n *   Extra test for which headings are linked (optional).\n */\n\n/**\n * @template T\n *   Kind.\n * @typedef {(\n *   T extends Record<any, any>\n *     ? {-readonly [k in keyof T]: Cloneable<T[k]>}\n *     : T\n * )} Cloneable\n *   Deep clone.\n *\n *   See: <https://github.com/microsoft/TypeScript-DOM-lib-generator/issues/1237#issuecomment-1345515448>\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {convertElement} from 'hast-util-is-element'\nimport {SKIP, visit} from 'unist-util-visit'\n\n/** @type {Element} */\nconst contentDefaults = {\n  type: 'element',\n  tagName: 'span',\n  properties: {className: ['icon', 'icon-link']},\n  children: []\n}\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add links from headings back to themselves.\n *\n * ###### Notes\n *\n * This plugin only applies to headings with `id`s.\n * Use `rehype-slug` to generate `id`s for headings that don’t have them.\n *\n * Several behaviors are supported:\n *\n * *   `'prepend'` (default) — inject link before the heading text\n * *   `'append'` — inject link after the heading text\n * *   `'wrap'` — wrap the whole heading text with the link\n * *   `'before'` — insert link before the heading\n * *   `'after'` — insert link after the heading\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeAutolinkHeadings(options) {\n  const settings = options || emptyOptions\n  let properties = settings.properties\n  const headingOroperties = settings.headingProperties\n  const behavior = settings.behavior || 'prepend'\n  const content = settings.content\n  const group = settings.group\n  const is = convertElement(settings.test)\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  let method\n\n  if (behavior === 'after' || behavior === 'before') {\n    method = around\n  } else if (behavior === 'wrap') {\n    method = wrap\n  } else {\n    method = inject\n\n    if (!properties) {\n      properties = {ariaHidden: 'true', tabIndex: -1}\n    }\n  }\n\n  /**\n   * Transform.\n   *\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    visit(tree, 'element', function (node, index, parent) {\n      if (headingRank(node) && node.properties.id && is(node, index, parent)) {\n        Object.assign(node.properties, toProperties(headingOroperties, node))\n        return method(node, index, parent)\n      }\n    })\n  }\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  function inject(node) {\n    const children = toChildren(content || contentDefaults, node)\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](\n      create(node, toProperties(properties, node), children)\n    )\n\n    return [SKIP]\n  }\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  function around(node, index, parent) {\n    /* c8 ignore next -- uncommon */\n    if (typeof index !== 'number' || !parent) return\n\n    const children = toChildren(content || contentDefaults, node)\n    const link = create(node, toProperties(properties, node), children)\n    let nodes = behavior === 'before' ? [link, node] : [node, link]\n\n    if (group) {\n      const grouping = toNode(group, node)\n\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\n        grouping.children = nodes\n        nodes = [grouping]\n      }\n    }\n\n    parent.children.splice(index, 1, ...nodes)\n\n    return [SKIP, index + nodes.length]\n  }\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  function wrap(node) {\n    /** @type {Array<ElementContent>} */\n    let before = node.children\n    /** @type {Array<ElementContent> | ElementContent} */\n    let after = []\n\n    if (typeof content === 'function') {\n      before = []\n      after = content(node)\n    } else if (content) {\n      after = clone(content)\n    }\n\n    node.children = [\n      create(\n        node,\n        toProperties(properties, node),\n        Array.isArray(after) ? [...before, ...after] : [...before, after]\n      )\n    ]\n\n    return [SKIP]\n  }\n}\n\n/**\n * Deep clone.\n *\n * @template T\n *   Kind.\n * @param {T} thing\n *   Thing to clone.\n * @returns {Cloneable<T>}\n *   Cloned thing.\n */\nfunction clone(thing) {\n  // Cast because it’s mutable now.\n  return /** @type {Cloneable<T>} */ (structuredClone(thing))\n}\n\n/**\n * Create an `a`.\n *\n * @param {Readonly<Element>} node\n *   Related heading.\n * @param {Properties | undefined} properties\n *   Properties to set on the link.\n * @param {Array<ElementContent>} children\n *   Content.\n * @returns {Element}\n *   Link.\n */\nfunction create(node, properties, children) {\n  return {\n    type: 'element',\n    tagName: 'a',\n    properties: {...properties, href: '#' + node.properties.id},\n    children\n  }\n}\n\n/**\n * Turn into children.\n *\n * @param {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build} value\n *   Content.\n * @param {Readonly<Element>} node\n *   Related heading.\n * @returns {Array<ElementContent>}\n *   Children.\n */\nfunction toChildren(value, node) {\n  const result = toNode(value, node)\n  return Array.isArray(result) ? result : [result]\n}\n\n/**\n * Turn into a node.\n *\n * @param {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build} value\n *   Content.\n * @param {Readonly<Element>} node\n *   Related heading.\n * @returns {Array<ElementContent> | ElementContent}\n *   Node.\n */\nfunction toNode(value, node) {\n  if (typeof value === 'function') return value(node)\n  return clone(value)\n}\n\n/**\n * Turn into properties.\n *\n * @param {Readonly<Properties> | BuildProperties | null | undefined} value\n *   Properties.\n * @param {Readonly<Element>} node\n *   Related heading.\n * @returns {Properties}\n *   Properties.\n */\nfunction toProperties(value, node) {\n  if (typeof value === 'function') return value(node)\n  return value ? clone(value) : {}\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is an element.\n * @param {unknown} this\n *   Context object (`this`) to call `test` with\n * @param {unknown} [element]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | null | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean}\n *   Whether this is an element and passes a test.\n *\n * @typedef {Array<TestFunction | string> | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary element.\n *\n *   * when `string`, checks that the element has that tag name\n *   * when `function`, see `TestFunction`\n *   * when `Array`, checks if one of the subtests pass\n *\n * @callback TestFunction\n *   Check if an element passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Element} element\n *   An element.\n * @param {number | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean | undefined | void}\n *   Whether this element passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `element` is an `Element` and whether it passes the given test.\n *\n * @param element\n *   Thing to check, typically `element`.\n * @param test\n *   Check for a specific element.\n * @param index\n *   Position of `element` in its parent.\n * @param parent\n *   Parent of `element`.\n * @param context\n *   Context object (`this`) to call `test` with.\n * @returns\n *   Whether `element` is an `Element` and passes a test.\n * @throws\n *   When an incorrect `test`, `index`, or `parent` is given; there is no error\n *   thrown when `element` is not a node or not an element.\n */\nexport const isElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((element?: null | undefined) => false) &\n   *   ((element: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((element: unknown, test?: Test, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [element]\n     * @param {Test | undefined} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parents | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (element, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== null &&\n        index !== undefined &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite `index`')\n      }\n\n      if (\n        parent !== null &&\n        parent !== undefined &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected valid `parent`')\n      }\n\n      if (\n        (index === null || index === undefined) !==\n        (parent === null || parent === undefined)\n      ) {\n        throw new Error('Expected both `index` and `parent`')\n      }\n\n      return looksLikeAnElement(element)\n        ? check.call(context, element, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate a check from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * an `element`, `index`, and `parent`.\n *\n * @param test\n *   A test for a specific element.\n * @returns\n *   A check.\n */\nexport const convertElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((test?: null | undefined) => (element?: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test | null | undefined} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      // Assume array.\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as `test`')\n    }\n  )\n\n/**\n * Handle multiple tests.\n *\n * @param {Array<TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn a string into a test for an element with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction tagNameFactory(check) {\n  return castFactory(tagName)\n\n  /**\n   * @param {Element} element\n   * @returns {boolean}\n   */\n  function tagName(element) {\n    return element.tagName === check\n  }\n}\n\n/**\n * Turn a custom test into a test for an element that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeAnElement(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\n/**\n * Make sure something is an element.\n *\n * @param {unknown} element\n * @returns {element is Element}\n */\nfunction element(element) {\n  return Boolean(\n    element &&\n      typeof element === 'object' &&\n      'type' in element &&\n      element.type === 'element' &&\n      'tagName' in element &&\n      typeof element.tagName === 'string'\n  )\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Element}\n */\nfunction looksLikeAnElement(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    'type' in value &&\n    'tagName' in value\n  )\n}\n","/**\n * @param {string} string    The string to parse\n * @returns {Array<number>}  Returns an energetic array.\n */\nfunction parsePart(string) {\n  let res = [];\n  let m;\n\n  for (let str of string.split(\",\").map((str) => str.trim())) {\n    // just a number\n    if (/^-?\\d+$/.test(str)) {\n      res.push(parseInt(str, 10));\n    } else if (\n      (m = str.match(/^(-?\\d+)(-|\\.\\.\\.?|\\u2025|\\u2026|\\u22EF)(-?\\d+)$/))\n    ) {\n      // 1-5 or 1..5 (equivalent) or 1...5 (doesn't include 5)\n      let [_, lhs, sep, rhs] = m;\n\n      if (lhs && rhs) {\n        lhs = parseInt(lhs);\n        rhs = parseInt(rhs);\n        const incr = lhs < rhs ? 1 : -1;\n\n        // Make it inclusive by moving the right 'stop-point' away by one.\n        if (sep === \"-\" || sep === \"..\" || sep === \"\\u2025\") rhs += incr;\n\n        for (let i = lhs; i !== rhs; i += incr) res.push(i);\n      }\n    }\n  }\n\n  return res;\n}\n\nexports.default = parsePart;\nmodule.exports = parsePart;\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file = ''\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual = undefined\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected = undefined\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note = undefined\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url = undefined\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @import {Root} from 'hast'\n * @import {ParserError} from 'parse5'\n * @import {Value} from 'vfile'\n * @import {ErrorCode, Options} from './types.js'\n */\n\nimport {ok as assert} from 'devlop'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {parse, parseFragment} from 'parse5'\nimport {VFile} from 'vfile'\nimport {VFileMessage} from 'vfile-message'\nimport {errors} from './errors.js'\n\nconst base = 'https://html.spec.whatwg.org/multipage/parsing.html#parse-error-'\n\nconst dashToCamelRe = /-[a-z]/g\nconst formatCRe = /%c(?:([-+])(\\d+))?/g\nconst formatXRe = /%x/g\n\nconst fatalities = {2: true, 1: false, 0: null}\n\n/** @type {Readonly<Options>} */\nconst emptyOptions = {}\n\n/**\n * Turn serialized HTML into a hast tree.\n *\n * @param {VFile | Value} value\n *   Serialized HTML to parse.\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Root}\n *   Tree.\n */\nexport function fromHtml(value, options) {\n  const settings = options || emptyOptions\n  const onerror = settings.onerror\n  const file = value instanceof VFile ? value : new VFile(value)\n  const parseFunction = settings.fragment ? parseFragment : parse\n  const document = String(file)\n  const p5Document = parseFunction(document, {\n    sourceCodeLocationInfo: true,\n    // Note `parse5` types currently do not allow `undefined`.\n    onParseError: settings.onerror ? internalOnerror : null,\n    scriptingEnabled: false\n  })\n\n  // `parse5` returns document which are always mapped to roots.\n  return /** @type {Root} */ (\n    fromParse5(p5Document, {\n      file,\n      space: settings.space,\n      verbose: settings.verbose\n    })\n  )\n\n  /**\n   * Handle a parse error.\n   *\n   * @param {ParserError} error\n   *   Parse5 error.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function internalOnerror(error) {\n    const code = error.code\n    const name = camelcase(code)\n    const setting = settings[name]\n    const config = setting === null || setting === undefined ? true : setting\n    const level = typeof config === 'number' ? config : config ? 1 : 0\n\n    if (level) {\n      const info = errors[name]\n      assert(info, 'expected known error from `parse5`')\n\n      const message = new VFileMessage(format(info.reason), {\n        place: {\n          start: {\n            line: error.startLine,\n            column: error.startCol,\n            offset: error.startOffset\n          },\n          end: {\n            line: error.endLine,\n            column: error.endCol,\n            offset: error.endOffset\n          }\n        },\n        ruleId: code,\n        source: 'hast-util-from-html'\n      })\n\n      if (file.path) {\n        message.file = file.path\n        message.name = file.path + ':' + message.name\n      }\n\n      message.fatal = fatalities[level]\n      message.note = format(info.description)\n      message.url = info.url === false ? undefined : base + code\n\n      assert(onerror, '`internalOnerror` is not passed if `onerror` is not set')\n      onerror(message)\n    }\n\n    /**\n     * Format a human readable string about an error.\n     *\n     * @param {string} value\n     *   Value to format.\n     * @returns {string}\n     *   Formatted.\n     */\n    function format(value) {\n      return value.replace(formatCRe, formatC).replace(formatXRe, formatX)\n\n      /**\n       * Format the character.\n       *\n       * @param {string} _\n       *   Match.\n       * @param {string} $1\n       *   Sign (`-` or `+`, optional).\n       * @param {string} $2\n       *   Offset.\n       * @returns {string}\n       *   Formatted.\n       */\n      function formatC(_, $1, $2) {\n        const offset =\n          ($2 ? Number.parseInt($2, 10) : 0) * ($1 === '-' ? -1 : 1)\n        const char = document.charAt(error.startOffset + offset)\n        return visualizeCharacter(char)\n      }\n\n      /**\n       * Format the character code.\n       *\n       * @returns {string}\n       *   Formatted.\n       */\n      function formatX() {\n        return visualizeCharacterCode(document.charCodeAt(error.startOffset))\n      }\n    }\n  }\n}\n\n/**\n * @param {string} value\n *   Error code in dash case.\n * @returns {ErrorCode}\n *   Error code in camelcase.\n */\nfunction camelcase(value) {\n  // This should match an error code.\n  return /** @type {ErrorCode} */ (value.replace(dashToCamelRe, dashToCamel))\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @returns {string}\n *   Camelcased.\n */\nfunction dashToCamel($0) {\n  return $0.charAt(1).toUpperCase()\n}\n\n/**\n * @param {string} char\n *   Character.\n * @returns {string}\n *   Formatted.\n */\nfunction visualizeCharacter(char) {\n  return char === '`' ? '` ` `' : char\n}\n\n/**\n * @param {number} charCode\n *   Character code.\n * @returns {string}\n *   Formatted.\n */\nfunction visualizeCharacterCode(charCode) {\n  return '0x' + charCode.toString(16).toUpperCase()\n}\n","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex !== -1) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx === -1) {\n            this.entries.length = 0;\n        }\n        else {\n            this.entries.splice(0, markerIdx + 1);\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));\n","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n",null,null,null,"import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n","import { TAG_ID as $, NS, NUMBERED_HEADERS } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENTS_HTML = new Set([\n    $.APPLET,\n    $.CAPTION,\n    $.HTML,\n    $.MARQUEE,\n    $.OBJECT,\n    $.TABLE,\n    $.TD,\n    $.TEMPLATE,\n    $.TH,\n]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, $.OL, $.UL]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, $.BUTTON]);\nconst SCOPING_ELEMENTS_MATHML = new Set([$.ANNOTATION_XML, $.MI, $.MN, $.MO, $.MS, $.MTEXT]);\nconst SCOPING_ELEMENTS_SVG = new Set([$.DESC, $.FOREIGN_OBJECT, $.TITLE]);\nconst TABLE_ROW_CONTEXT = new Set([$.TR, $.TEMPLATE, $.HTML]);\nconst TABLE_BODY_CONTEXT = new Set([$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML]);\nconst TABLE_CONTEXT = new Set([$.TABLE, $.TEMPLATE, $.HTML]);\nconst TABLE_CELLS = new Set([$.TD, $.TH]);\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        if (this.current && this.currentTagId !== undefined) {\n            this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n        }\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(Math.max(targetIdx, 0));\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInDynamicScope(tagName, htmlScope) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (tn === tagName)\n                        return true;\n                    if (htmlScope.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n    }\n    hasInListItemScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n    }\n    hasInButtonScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (NUMBERED_HEADERS.has(tn))\n                        return true;\n                    if (SCOPING_ELEMENTS_HTML.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.OPTION:\n                case $.OPTGROUP: {\n                    break;\n                }\n                default: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== undefined &&\n            this.currentTagId !== exclusionId &&\n            IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SEARCH\"] = \"search\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SEARCH, TAG_ID.SEARCH],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n","import { DOCUMENT_MODE } from '../common/html.js';\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    createTextNode(value) {\n        return {\n            nodeName: '#text',\n            value,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n",null,null,"import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code, cpOffset) {\n        const { line, col, offset } = this;\n        const startCol = col + cpOffset;\n        const startOffset = offset + cpOffset;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol,\n            endCol: startCol,\n            startOffset,\n            endOffset: startOffset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code, 0));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  properties: {xmlBase: null, xmlLang: null, xmlSpace: null},\n  space: 'xml',\n  transform(_, property) {\n    return 'xml:' + property.slice(3).toLowerCase()\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  },\n  space: 'xlink',\n  transform(_, property) {\n    return 'xlink:' + property.slice(5).toLowerCase()\n  }\n})\n","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/escape';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (attr.namespace) {\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        }\n        else {\n            html += attr.name;\n        }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  properties: {xmlnsXLink: null, xmlns: null},\n  space: 'xmlns',\n  transform: caseInsensitiveTransform\n})\n","import {create} from './util/create.js'\nimport {booleanish, number, spaceSeparated} from './util/types.js'\n\nexport const aria = create({\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  },\n  transform(_, property) {\n    return property === 'role'\n      ? property\n      : 'aria-' + property.slice(4).toLowerCase()\n  }\n})\n","/**\n * @import {Space} from 'property-information'\n */\n\nimport {Info} from './info.js'\nimport * as types from './types.js'\n\nconst checks = /** @type {ReadonlyArray<keyof typeof types>} */ (\n  Object.keys(types)\n)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @param {number | null | undefined} [mask]\n   *   Mask.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @template {keyof DefinedInfo} Key\n *   Key type.\n * @param {DefinedInfo} values\n *   Info.\n * @param {Key} key\n *   Key.\n * @param {DefinedInfo[Key]} value\n *   Value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n","/**\n * List of case-sensitive SVG tag names.\n *\n * @type {ReadonlyArray<string>}\n */\nexport const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @import {Info as InfoType} from 'property-information'\n */\n\n/** @type {InfoType} */\nexport class Info {\n  /**\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute) {\n    this.attribute = attribute\n    this.property = property\n  }\n}\n\nInfo.prototype.attribute = ''\nInfo.prototype.booleanish = false\nInfo.prototype.boolean = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.defined = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.number = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.property = ''\nInfo.prototype.spaceSeparated = false\nInfo.prototype.space = undefined\n","/**\n * @import {Schema as SchemaType, Space} from 'property-information'\n */\n\n/** @type {SchemaType} */\nexport class Schema {\n  /**\n   * @param {SchemaType['property']} property\n   *   Property.\n   * @param {SchemaType['normal']} normal\n   *   Normal.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Schema.\n   */\n  constructor(property, normal, space) {\n    this.normal = normal\n    this.property = property\n\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\nSchema.prototype.normal = {}\nSchema.prototype.property = {}\nSchema.prototype.space = undefined\n","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, EntityDecoder, DecodingMode } from 'entities/decode';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n    if (code === $.NULL) {\n        return ERR.nullCharacterReference;\n    }\n    else if (code > 1114111) {\n        return ERR.characterReferenceOutsideUnicodeRange;\n    }\n    else if (isSurrogate(code)) {\n        return ERR.surrogateCharacterReference;\n    }\n    else if (isUndefinedCodePoint(code)) {\n        return ERR.noncharacterCharacterReference;\n    }\n    else if (isControlCodePoint(code) || code === $.CARRIAGE_RETURN) {\n        return ERR.controlCharacterReference;\n    }\n    return null;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.entityStartPos = 0;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n        this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {\n            // Note: Set `pos` _before_ flushing, as flushing might drop\n            // the current chunk and invalidate `entityStartPos`.\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }, handler.onParseError\n            ? {\n                missingSemicolonAfterCharacterReference: () => {\n                    this._err(ERR.missingSemicolonAfterCharacterReference, 1);\n                },\n                absenceOfDigitsInNumericCharacterReference: (consumed) => {\n                    this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n                },\n                validateNumericCharacterReference: (code) => {\n                    const error = getErrorForNumericCharacterReference(code);\n                    if (error)\n                        this._err(error, 1);\n                },\n            }\n            : undefined);\n    }\n    //Errors\n    _err(code, cpOffset = 0) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\n            this.consumedAfterSnapshot = 0;\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type === type) {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n            else {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _startCharacterReference() {\n        this.returnState = this.state;\n        this.state = State.CHARACTER_REFERENCE;\n        this.entityStartPos = this.preprocessor.pos;\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference();\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference() {\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n        if (length < 0) {\n            if (this.preprocessor.lastChunkWritten) {\n                length = this.entityDecoder.end();\n            }\n            else {\n                // Wait for the rest of the entity.\n                this.active = false;\n                // Mark the entire buffer as read.\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\n                this.consumedAfterSnapshot = 0;\n                this.preprocessor.endOfChunkHit = true;\n                return;\n            }\n        }\n        if (length === 0) {\n            // This was not a valid entity. Go back to the beginning, and\n            // figure out what to do.\n            this.preprocessor.pos = this.entityStartPos;\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state =\n                !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1))\n                    ? State.AMBIGUOUS_AMPERSAND\n                    : this.returnState;\n        }\n        else {\n            // We successfully parsed an entity. Switch to the return state.\n            this.state = this.returnState;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this.state = this.returnState;\n            this._callState(cp);\n        }\n    }\n}\n","/**\n * @import {Schema} from 'property-information'\n */\n\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\nimport {normalize} from './normalize.js'\n\nconst cap = /[A-Z]/g\nconst dash = /-[a-z]/g\nconst valid = /^data[-\\w.:]+$/i\n\n/**\n * Look up info on a property.\n *\n * In most cases the given `schema` contains info on the property.\n * All standard,\n * most legacy,\n * and some non-standard properties are supported.\n * For these cases,\n * the returned `Info` has hints about the value of the property.\n *\n * `name` can also be a valid data attribute or property,\n * in which case an `Info` object with the correctly cased `attribute` and\n * `property` is returned.\n *\n * `name` can be an unknown attribute,\n * in which case an `Info` object with `attribute` and `property` set to the\n * given name is returned.\n * It is not recommended to provide unsupported legacy or recently specced\n * properties.\n *\n *\n * @param {Schema} schema\n *   Schema;\n *   either the `html` or `svg` export.\n * @param {string} value\n *   An attribute-like or property-like name;\n *   it will be passed through `normalize` to hopefully find the correct info.\n * @returns {Info}\n *   Info.\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let property = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      property = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(property, value)\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Kebab.\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Camel.\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} attribute\n *   Attribute.\n * @returns {string}\n *   Transformed attribute.\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","/**\n * Get the cleaned case insensitive form of an attribute or property.\n *\n * @param {string} value\n *   An attribute-like or property-like name.\n * @returns {string}\n *   Value that can be used to look up the properly cased property on a\n *   `Schema`.\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, \n    /** @internal */\n    fragmentContext = null, \n    /** @internal */\n    scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */\n        this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.headElement = null;\n        /** @internal */\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */\n        this.tmplInsertionModeStack = [];\n        /** @internal */\n        this.pendingCharacterTokens = [];\n        /** @internal */\n        this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */\n        this.framesetOk = true;\n        /** @internal */\n        this.skipNextNewLine = false;\n        /** @internal */\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    /** @internal */\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || (current && this.treeAdapter.getNamespaceURI(current) === NS.HTML);\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode =\n            !isHTML && current !== undefined && tid !== undefined && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    /** @protected */\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    /** @protected */\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent !== null && parent !== void 0 ? parent : this.document, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */\n    /** @protected */\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    /** @protected */\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                currentTagId !== undefined &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    /** @protected */\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    /** @protected */\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex === -1 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    /** @protected */\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */\n    _shouldFosterParentOnInsertion() {\n        return (this.fosterParentingEnabled &&\n            this.openElements.currentTagId !== undefined &&\n            this._isElementCausesFosterParenting(this.openElements.currentTagId));\n    }\n    /** @protected */\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    /** @protected */\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(Math.max(idx, 0));\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (p.openElements.currentTagId !== undefined && NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED:\n        case $.NOFRAMES: {\n            rawTextStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                rawTextStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (p.openElements.currentTagId !== undefined && TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.HR: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        p.openElements.currentTagId !== undefined &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n","import {caseSensitiveTransform} from './util/case-sensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  boolean,\n  commaOrSpaceSeparated,\n  commaSeparated,\n  number,\n  spaceSeparated\n} from './util/types.js'\n\nexport const svg = create({\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  },\n  space: 'svg',\n  transform: caseSensitiveTransform\n})\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Transformed property.\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","/**\n * @typedef ErrorInfo\n *   Info on a `parse5` error.\n * @property {string} reason\n *   Reason of error.\n * @property {string} description\n *   More info on error.\n * @property {false} [url]\n *   Turn off if this is not documented in the html5 spec (optional).\n */\n\nexport const errors = {\n  /** @type {ErrorInfo} */\n  abandonedHeadElementChild: {\n    reason: 'Unexpected metadata element after head',\n    description:\n      'Unexpected element after head. Expected the element before `</head>`',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  abruptClosingOfEmptyComment: {\n    reason: 'Unexpected abruptly closed empty comment',\n    description: 'Unexpected `>` or `->`. Expected `-->` to close comments'\n  },\n  /** @type {ErrorInfo} */\n  abruptDoctypePublicIdentifier: {\n    reason: 'Unexpected abruptly closed public identifier',\n    description:\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the public identifier'\n  },\n  /** @type {ErrorInfo} */\n  abruptDoctypeSystemIdentifier: {\n    reason: 'Unexpected abruptly closed system identifier',\n    description:\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the identifier identifier'\n  },\n  /** @type {ErrorInfo} */\n  absenceOfDigitsInNumericCharacterReference: {\n    reason: 'Unexpected non-digit at start of numeric character reference',\n    description:\n      'Unexpected `%c`. Expected `[0-9]` for decimal references or `[0-9a-fA-F]` for hexadecimal references'\n  },\n  /** @type {ErrorInfo} */\n  cdataInHtmlContent: {\n    reason: 'Unexpected CDATA section in HTML',\n    description:\n      'Unexpected `<![CDATA[` in HTML. Remove it, use a comment, or encode special characters instead'\n  },\n  /** @type {ErrorInfo} */\n  characterReferenceOutsideUnicodeRange: {\n    reason: 'Unexpected too big numeric character reference',\n    description:\n      'Unexpectedly high character reference. Expected character references to be at most hexadecimal 10ffff (or decimal 1114111)'\n  },\n  /** @type {ErrorInfo} */\n  closingOfElementWithOpenChildElements: {\n    reason: 'Unexpected closing tag with open child elements',\n    description:\n      'Unexpectedly closing tag. Expected other tags to be closed first',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  controlCharacterInInputStream: {\n    reason: 'Unexpected control character',\n    description:\n      'Unexpected control character `%x`. Expected a non-control code point, 0x00, or ASCII whitespace'\n  },\n  /** @type {ErrorInfo} */\n  controlCharacterReference: {\n    reason: 'Unexpected control character reference',\n    description:\n      'Unexpectedly control character in reference. Expected a non-control code point, 0x00, or ASCII whitespace'\n  },\n  /** @type {ErrorInfo} */\n  disallowedContentInNoscriptInHead: {\n    reason: 'Disallowed content inside `<noscript>` in `<head>`',\n    description:\n      'Unexpected text character `%c`. Only use text in `<noscript>`s in `<body>`',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  duplicateAttribute: {\n    reason: 'Unexpected duplicate attribute',\n    description:\n      'Unexpectedly double attribute. Expected attributes to occur only once'\n  },\n  /** @type {ErrorInfo} */\n  endTagWithAttributes: {\n    reason: 'Unexpected attribute on closing tag',\n    description: 'Unexpected attribute. Expected `>` instead'\n  },\n  /** @type {ErrorInfo} */\n  endTagWithTrailingSolidus: {\n    reason: 'Unexpected slash at end of closing tag',\n    description: 'Unexpected `%c-1`. Expected `>` instead'\n  },\n  /** @type {ErrorInfo} */\n  endTagWithoutMatchingOpenElement: {\n    reason: 'Unexpected unopened end tag',\n    description: 'Unexpected end tag. Expected no end tag or another end tag',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  eofBeforeTagName: {\n    reason: 'Unexpected end of file',\n    description: 'Unexpected end of file. Expected tag name instead'\n  },\n  /** @type {ErrorInfo} */\n  eofInCdata: {\n    reason: 'Unexpected end of file in CDATA',\n    description: 'Unexpected end of file. Expected `]]>` to close the CDATA'\n  },\n  /** @type {ErrorInfo} */\n  eofInComment: {\n    reason: 'Unexpected end of file in comment',\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\n  },\n  /** @type {ErrorInfo} */\n  eofInDoctype: {\n    reason: 'Unexpected end of file in doctype',\n    description:\n      'Unexpected end of file. Expected a valid doctype (such as `<!doctype html>`)'\n  },\n  /** @type {ErrorInfo} */\n  eofInElementThatCanContainOnlyText: {\n    reason: 'Unexpected end of file in element that can only contain text',\n    description: 'Unexpected end of file. Expected text or a closing tag',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  eofInScriptHtmlCommentLikeText: {\n    reason: 'Unexpected end of file in comment inside script',\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\n  },\n  /** @type {ErrorInfo} */\n  eofInTag: {\n    reason: 'Unexpected end of file in tag',\n    description: 'Unexpected end of file. Expected `>` to close the tag'\n  },\n  /** @type {ErrorInfo} */\n  incorrectlyClosedComment: {\n    reason: 'Incorrectly closed comment',\n    description: 'Unexpected `%c-1`. Expected `-->` to close the comment'\n  },\n  /** @type {ErrorInfo} */\n  incorrectlyOpenedComment: {\n    reason: 'Incorrectly opened comment',\n    description: 'Unexpected `%c`. Expected `<!--` to open the comment'\n  },\n  /** @type {ErrorInfo} */\n  invalidCharacterSequenceAfterDoctypeName: {\n    reason: 'Invalid sequence after doctype name',\n    description: 'Unexpected sequence at `%c`. Expected `public` or `system`'\n  },\n  /** @type {ErrorInfo} */\n  invalidFirstCharacterOfTagName: {\n    reason: 'Invalid first character in tag name',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  /** @type {ErrorInfo} */\n  misplacedDoctype: {\n    reason: 'Misplaced doctype',\n    description: 'Unexpected doctype. Expected doctype before head',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  misplacedStartTagForHeadElement: {\n    reason: 'Misplaced `<head>` start tag',\n    description:\n      'Unexpected start tag `<head>`. Expected `<head>` directly after doctype',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  missingAttributeValue: {\n    reason: 'Missing attribute value',\n    description:\n      'Unexpected `%c-1`. Expected an attribute value or no `%c-1` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingDoctype: {\n    reason: 'Missing doctype before other content',\n    description: 'Expected a `<!doctype html>` before anything else',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  missingDoctypeName: {\n    reason: 'Missing doctype name',\n    description: 'Unexpected doctype end at `%c`. Expected `html` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingDoctypePublicIdentifier: {\n    reason: 'Missing public identifier in doctype',\n    description: 'Unexpected `%c`. Expected identifier for `public` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingDoctypeSystemIdentifier: {\n    reason: 'Missing system identifier in doctype',\n    description:\n      'Unexpected `%c`. Expected identifier for `system` instead (suggested: `\"about:legacy-compat\"`)'\n  },\n  /** @type {ErrorInfo} */\n  missingEndTagName: {\n    reason: 'Missing name in end tag',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  /** @type {ErrorInfo} */\n  missingQuoteBeforeDoctypePublicIdentifier: {\n    reason: 'Missing quote before public identifier in doctype',\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingQuoteBeforeDoctypeSystemIdentifier: {\n    reason: 'Missing quote before system identifier in doctype',\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingSemicolonAfterCharacterReference: {\n    reason: 'Missing semicolon after character reference',\n    description: 'Unexpected `%c`. Expected `;` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceAfterDoctypePublicKeyword: {\n    reason: 'Missing whitespace after public identifier in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceAfterDoctypeSystemKeyword: {\n    reason: 'Missing whitespace after system identifier in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceBeforeDoctypeName: {\n    reason: 'Missing whitespace before doctype name',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceBetweenAttributes: {\n    reason: 'Missing whitespace between attributes',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: {\n    reason:\n      'Missing whitespace between public and system identifiers in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  nestedComment: {\n    reason: 'Unexpected nested comment',\n    description: 'Unexpected `<!--`. Expected `-->`'\n  },\n  /** @type {ErrorInfo} */\n  nestedNoscriptInHead: {\n    reason: 'Unexpected nested `<noscript>` in `<head>`',\n    description:\n      'Unexpected `<noscript>`. Expected a closing tag or a meta element',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  nonConformingDoctype: {\n    reason: 'Unexpected non-conforming doctype declaration',\n    description:\n      'Expected `<!doctype html>` or `<!doctype html system \"about:legacy-compat\">`',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  nonVoidHtmlElementStartTagWithTrailingSolidus: {\n    reason: 'Unexpected trailing slash on start tag of non-void element',\n    description: 'Unexpected `/`. Expected `>` instead'\n  },\n  /** @type {ErrorInfo} */\n  noncharacterCharacterReference: {\n    reason:\n      'Unexpected noncharacter code point referenced by character reference',\n    description: 'Unexpected code point. Do not use noncharacters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  noncharacterInInputStream: {\n    reason: 'Unexpected noncharacter character',\n    description: 'Unexpected code point `%x`. Do not use noncharacters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  nullCharacterReference: {\n    reason: 'Unexpected NULL character referenced by character reference',\n    description: 'Unexpected code point. Do not use NULL characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  openElementsLeftAfterEof: {\n    reason: 'Unexpected end of file',\n    description: 'Unexpected end of file. Expected closing tag instead',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  surrogateCharacterReference: {\n    reason: 'Unexpected surrogate character referenced by character reference',\n    description:\n      'Unexpected code point. Do not use lone surrogate characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  surrogateInInputStream: {\n    reason: 'Unexpected surrogate character',\n    description:\n      'Unexpected code point `%x`. Do not use lone surrogate characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedCharacterAfterDoctypeSystemIdentifier: {\n    reason: 'Invalid character after system identifier in doctype',\n    description: 'Unexpected character at `%c`. Expected `>`'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedCharacterInAttributeName: {\n    reason: 'Unexpected character in attribute name',\n    description:\n      'Unexpected `%c`. Expected whitespace, `/`, `>`, `=`, or probably an ASCII letter'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedCharacterInUnquotedAttributeValue: {\n    reason: 'Unexpected character in unquoted attribute value',\n    description: 'Unexpected `%c`. Quote the attribute value to include it'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedEqualsSignBeforeAttributeName: {\n    reason: 'Unexpected equals sign before attribute name',\n    description: 'Unexpected `%c`. Add an attribute name before it'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedNullCharacter: {\n    reason: 'Unexpected NULL character',\n    description:\n      'Unexpected code point `%x`. Do not use NULL characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedQuestionMarkInsteadOfTagName: {\n    reason: 'Unexpected question mark instead of tag name',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedSolidusInTag: {\n    reason: 'Unexpected slash in tag',\n    description:\n      'Unexpected `%c-1`. Expected it followed by `>` or in a quoted attribute value'\n  },\n  /** @type {ErrorInfo} */\n  unknownNamedCharacterReference: {\n    reason: 'Unexpected unknown named character reference',\n    description:\n      'Unexpected character reference. Expected known named character references'\n  }\n}\n","import {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  booleanish,\n  boolean,\n  commaSeparated,\n  number,\n  overloadedBoolean,\n  spaceSeparated\n} from './util/types.js'\n\nexport const html = create({\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: overloadedBoolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  },\n  space: 'html',\n  transform: caseInsensitiveTransform\n})\n","// Note: types exposed from `index.d.ts`.\nimport {merge} from './lib/util/merge.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\nimport {xlink} from './lib/xlink.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {xml} from './lib/xml.js'\n\nexport {hastToReact} from './lib/hast-to-react.js'\n\nexport const html = merge([aria, htmlBase, xlink, xmlns, xml], 'html')\n\nexport {find} from './lib/find.js'\nexport {normalize} from './lib/normalize.js'\n\nexport const svg = merge([aria, svgBase, xlink, xmlns, xml], 'svg')\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {ReadonlyArray<Schema>} definitions\n *   Definitions.\n * @param {Space | undefined} [space]\n *   Space.\n * @returns {Schema}\n *   Schema.\n */\nexport function merge(definitions, space) {\n  /** @type {Record<string, Info>} */\n  const property = {}\n  /** @type {Record<string, string>} */\n  const normal = {}\n\n  for (const definition of definitions) {\n    Object.assign(property, definition.property)\n    Object.assign(normal, definition.normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @import {VFile, Value} from 'vfile'\n * @import {Location} from 'vfile-location'\n */\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  return {toOffset, toPoint}\n\n  /** @type {Location['toPoint']} */\n  function toPoint(offset) {\n    if (typeof offset === 'number' && offset > -1 && offset <= value.length) {\n      let index = 0\n\n      while (true) {\n        let end = indices[index]\n\n        if (end === undefined) {\n          const eol = next(value, indices[index - 1])\n          end = eol === -1 ? value.length + 1 : eol + 1\n          indices[index] = end\n        }\n\n        if (end > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n\n        index++\n      }\n    }\n  }\n\n  /** @type {Location['toOffset']} */\n  function toOffset(point) {\n    if (\n      point &&\n      typeof point.line === 'number' &&\n      typeof point.column === 'number' &&\n      !Number.isNaN(point.line) &&\n      !Number.isNaN(point.column)\n    ) {\n      while (indices.length < point.line) {\n        const from = indices[indices.length - 1]\n        const eol = next(value, from)\n        const end = eol === -1 ? value.length + 1 : eol + 1\n        if (from === end) break\n        indices.push(end)\n      }\n\n      const offset =\n        (point.line > 1 ? indices[point.line - 2] : 0) + point.column - 1\n      // The given `column` could not exist on this line.\n      if (offset < indices[point.line - 1]) return offset\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @param {number} from\n */\nfunction next(value, from) {\n  const cr = value.indexOf('\\r', from)\n  const lf = value.indexOf('\\n', from)\n  if (lf === -1) return cr\n  if (cr === -1 || cr + 1 === lf) return lf\n  return cr < lf ? cr : lf\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @import {ElementData, Element, Nodes, RootContent, Root} from 'hast'\n * @import {DefaultTreeAdapterMap, Token} from 'parse5'\n * @import {Schema} from 'property-information'\n * @import {Point, Position} from 'unist'\n * @import {VFile} from 'vfile'\n * @import {Options} from 'hast-util-from-parse5'\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {DefaultTreeAdapterMap['node']} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {DefaultTreeAdapterMap['commentNode']} */ (\n        node\n      )\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference =\n        /** @type {DefaultTreeAdapterMap['document'] | DefaultTreeAdapterMap['documentFragment']} */ (\n          node\n        )\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const document = String(state.file)\n        const loc = location(document)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(document.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {DefaultTreeAdapterMap['documentType']} */ (\n        node\n      )\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {DefaultTreeAdapterMap['textNode']} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {DefaultTreeAdapterMap['element']} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<DefaultTreeAdapterMap['node']>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['element']} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const properties = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      properties[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const x = state.schema.space === 'svg' ? s : h\n  const result = x(node.tagName, properties, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {DefaultTreeAdapterMap['template']} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {Token.ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const properties = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            properties[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = properties\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {Token.Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\nexport * as html from './common/html.js';\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n","/**\n * @import {Root} from 'hast'\n * @import {Options as FromHtmlOptions} from 'hast-util-from-html'\n * @import {Parser, Processor} from 'unified'\n */\n\n/**\n * @typedef {Omit<FromHtmlOptions, 'onerror'> & RehypeParseFields} Options\n *   Configuration.\n *\n * @typedef RehypeParseFields\n *   Extra fields.\n * @property {boolean | null | undefined} [emitParseErrors=false]\n *   Whether to emit parse errors while parsing (default: `false`).\n *\n *   > 👉 **Note**: parse errors are currently being added to HTML.\n *   > Not all errors emitted by parse5 (or us) are specced yet.\n *   > Some documentation may still be missing.\n */\n\nimport {fromHtml} from 'hast-util-from-html'\n\n/**\n * Plugin to add support for parsing from HTML.\n *\n * > 👉 **Note**: this is not an XML parser.\n * > It supports SVG as embedded in HTML.\n * > It does not support the features available in XML.\n * > Passing SVG files might break but fragments of modern SVG should be fine.\n * > Use [`xast-util-from-xml`][xast-util-from-xml] to parse XML.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function rehypeParse(options) {\n  /** @type {Processor<Root>} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n  const {emitParseErrors, ...settings} = {...self.data('settings'), ...options}\n\n  self.parser = parser\n\n  /**\n   * @type {Parser<Root>}\n   */\n  function parser(document, file) {\n    return fromHtml(document, {\n      ...settings,\n      onerror: emitParseErrors\n        ? function (message) {\n            if (file.path) {\n              message.name = file.path + ':' + message.name\n              message.file = file.path\n            }\n\n            file.messages.push(message)\n          }\n        : undefined\n    })\n  }\n}\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\n/**\n * @typedef Definition\n *   Definition of a schema.\n * @property {Record<string, string> | undefined} [attributes]\n *   Normalzed names to special attribute case.\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\n *   Normalized names that must be set as properties.\n * @property {Record<string, number | null>} properties\n *   Property names to their types.\n * @property {Space | undefined} [space]\n *   Space.\n * @property {Transform} transform\n *   Transform a property name.\n */\n\n/**\n * @callback Transform\n *   Transform.\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Attribute.\n */\n\nimport {normalize} from '../normalize.js'\nimport {DefinedInfo} from './defined-info.js'\nimport {Schema} from './schema.js'\n\n/**\n * @param {Definition} definition\n *   Definition.\n * @returns {Schema}\n *   Schema.\n */\nexport function create(definition) {\n  /** @type {Record<string, Info>} */\n  const properties = {}\n  /** @type {Record<string, string>} */\n  const normals = {}\n\n  for (const [property, value] of Object.entries(definition.properties)) {\n    const info = new DefinedInfo(\n      property,\n      definition.transform(definition.attributes || {}, property),\n      value,\n      definition.space\n    )\n\n    if (\n      definition.mustUseProperty &&\n      definition.mustUseProperty.includes(property)\n    ) {\n      info.mustUseProperty = true\n    }\n\n    properties[property] = info\n\n    normals[normalize(property)] = property\n    normals[normalize(info.attribute)] = property\n  }\n\n  return new Schema(properties, normals, definition.space)\n}\n","/**\n * @import {Element, Nodes, RootContent, Root} from 'hast'\n * @import {Info, Schema} from 'property-information'\n */\n\n/**\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n */\n\n/**\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n */\n\n/**\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n */\n\n/**\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\n/**\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n */\n\n/**\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n */\n\n/**\n * @typedef {Record<string, PropertyValue | Style>} Properties\n *   Acceptable value for element properties.\n */\n\n/**\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n */\n\n/**\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n */\n\n/**\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n */\n\nimport {parse as parseCommas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as parseSpaces} from 'space-separated-tokens'\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {ReadonlyArray<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive ? createAdjustMap(caseSensitive) : undefined\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    /** @type {Result} */\n    let node\n\n    if (selector === null || selector === undefined) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      const lower = node.tagName.toLowerCase()\n      const adjusted = adjust ? adjust.get(lower) : undefined\n      node.tagName = adjusted || lower\n\n      // Handle properties.\n      if (isChild(properties)) {\n        children.unshift(properties)\n      } else {\n        for (const [key, value] of Object.entries(properties)) {\n          addProperty(schema, node.properties, key, value)\n        }\n      }\n    }\n\n    // Handle children.\n    for (const child of children) {\n      addChild(node.children, child)\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @returns {value is Child}\n *   Whether `value` is definitely a child.\n */\nfunction isChild(value) {\n  // Never properties if not an object.\n  if (value === null || typeof value !== 'object' || Array.isArray(value)) {\n    return true\n  }\n\n  // Never node without `type`; that’s the main discriminator.\n  if (typeof value.type !== 'string') return false\n\n  // Slower check: never property value if object or array with\n  // non-number/strings.\n  const record = /** @type {Record<string, unknown>} */ (value)\n  const keys = Object.keys(value)\n\n  for (const key of keys) {\n    const value = record[key]\n\n    if (value && typeof value === 'object') {\n      if (!Array.isArray(value)) return true\n\n      const list = /** @type {ReadonlyArray<unknown>} */ (value)\n\n      for (const item of list) {\n        if (typeof item !== 'number' && typeof item !== 'string') {\n          return true\n        }\n      }\n    }\n  }\n\n  // Also see empty `children` as a node.\n  if ('children' in value && Array.isArray(value.children)) {\n    return true\n  }\n\n  // Default to properties, someone can always pass an empty object,\n  // put `data: {}` in a node,\n  // or wrap it in an array.\n  return false\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === null || value === undefined) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = parseSpaces(value)\n    } else if (info.commaSeparated) {\n      result = parseCommas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = parseSpaces(parseCommas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = [...value]\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    for (const item of result) {\n      // Assume no booleans in array.\n      finalResult.push(\n        /** @type {number | string} */ (\n          parsePrimitive(info, info.property, item)\n        )\n      )\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    result = properties.className.concat(\n      /** @type {Array<number | string> | number | string} */ (result)\n    )\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  if (value === null || value === undefined) {\n    // Empty.\n  } else if (typeof value === 'number' || typeof value === 'string') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    for (const child of value) {\n      addChild(nodes, child)\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} styles\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(styles) {\n  /** @type {Array<string>} */\n  const result = []\n\n  for (const [key, value] of Object.entries(styles)) {\n    result.push([key, value].join(': '))\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {ReadonlyArray<string>} values\n *   List of properly cased keys.\n * @returns {Map<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Map<string, string>} */\n  const result = new Map()\n\n  for (const value of values) {\n    result.set(value.toLowerCase(), value)\n  }\n\n  return result\n}\n","import { getSingletonHighlighter } from 'shiki';\nimport { visit } from 'unist-util-visit';\nimport { toString } from 'hast-util-to-string';\nimport rangeParser2 from 'parse-numeric-range';\nimport { unified } from 'unified';\nimport rehypeParse from 'rehype-parse';\n\n// src/index.ts\nfunction isJSONTheme(value) {\n  return value ? Object.hasOwn(value, \"tokenColors\") : false;\n}\nfunction isElement(value) {\n  return value ? value.type === \"element\" : false;\n}\nfunction isText(value) {\n  return value ? value.type === \"text\" : false;\n}\nfunction isInlineCode(element, parent, bypass = false) {\n  if (bypass) {\n    return false;\n  }\n  return element.tagName === \"code\" && isElement(parent) && parent.tagName !== \"pre\" || element.tagName === \"inlineCode\";\n}\nfunction isBlockCode(element) {\n  return element.tagName === \"pre\" && Array.isArray(element.children) && element.children.length === 1 && isElement(element.children[0]) && element.children[0].tagName === \"code\";\n}\nfunction getInlineCodeLang(meta, defaultFallbackLang) {\n  const placeholder = \"\\0\";\n  let temp = meta.replace(/\\\\\\\\/g, placeholder);\n  temp = temp.replace(/\\\\({:[a-zA-Z.-]+})$/, \"$1\");\n  const lang = temp.match(/{:([a-zA-Z.-]+)}$/)?.[1];\n  return lang?.replace(new RegExp(placeholder, \"g\"), \"\\\\\") || defaultFallbackLang;\n}\nfunction parseBlockMetaString(element, filter, defaultFallback) {\n  let meta = filter(\n    element.data?.meta ?? element.properties?.metastring ?? \"\"\n  );\n  const titleMatch = meta.match(/title=\"([^\"]*)\"/);\n  const title = titleMatch?.[1] ?? null;\n  meta = meta.replace(titleMatch?.[0] ?? \"\", \"\");\n  const captionMatch = meta.match(/caption=\"([^\"]*)\"/);\n  const caption = captionMatch?.[1] ?? null;\n  meta = meta.replace(captionMatch?.[0] ?? \"\", \"\");\n  let lang = defaultFallback;\n  if (element.properties && Array.isArray(element.properties.className) && typeof element.properties.className[0] === \"string\" && element.properties.className[0].startsWith(\"language-\")) {\n    lang = element.properties.className[0].replace(\"language-\", \"\");\n  }\n  return {\n    title,\n    caption,\n    lang,\n    meta\n  };\n}\nfunction getThemeNames(theme) {\n  if (isJSONTheme(theme)) {\n    return [theme.name];\n  }\n  if (typeof theme === \"string\") {\n    return [theme];\n  }\n  return Object.values(theme).map(\n    (theme2) => typeof theme2 === \"string\" ? theme2 : theme2.name\n  );\n}\nfunction replaceLineClass(element) {\n  if (Array.isArray(element.properties?.className) && element.properties.className.includes(\"line\")) {\n    const className = element.properties.className.filter((c) => c !== \"line\");\n    element.properties.className = className.length > 0 ? className : void 0;\n    element.properties[\"data-line\"] = \"\";\n  }\n}\nfunction getLineId(lineNumber, meta) {\n  const segments = meta.match(/\\{[^}]+\\}#[a-zA-Z0-9]+/g);\n  if (!segments) return null;\n  for (const segment of segments) {\n    const [range, id] = segment.split(\"#\");\n    if (!(range && id)) continue;\n    const match = range.match(/\\{(.*?)\\}/);\n    const capture = match?.[1];\n    if (capture && rangeParser2(capture).includes(lineNumber)) {\n      return id;\n    }\n  }\n  return null;\n}\n\n// src/chars/splitElement.ts\nfunction splitElement({\n  elements,\n  elementToWrap,\n  innerString,\n  rightString,\n  leftString,\n  rest,\n  nextElementContinues,\n  index,\n  ignoreChars\n}) {\n  if (isElement(elementToWrap) && elementToWrap.children?.[0]?.type !== \"text\" || ignoreChars) {\n    return [elementToWrap, index];\n  }\n  let newIndex = index;\n  const textElement = elementToWrap.children[0];\n  if (isText(textElement)) {\n    textElement.value = innerString;\n  }\n  let rightStr = rightString;\n  const leftStr = leftString;\n  if (rest.length > 0) {\n    rightStr += rest.map((s) => s === \"\" ? innerString : innerString + s).join(\"\");\n  }\n  if (leftStr.length > 0) {\n    elements.splice(newIndex, 0, {\n      ...elementToWrap,\n      properties: { ...elementToWrap.properties },\n      children: [{ type: \"text\", value: leftStr }]\n    });\n  }\n  if (rightStr.length > 0 && !nextElementContinues) {\n    newIndex = leftStr.length > 0 ? newIndex + 2 : newIndex + 1;\n    elements.splice(newIndex, 0, {\n      ...elementToWrap,\n      properties: { ...elementToWrap.properties },\n      children: [{ type: \"text\", value: rightStr }]\n    });\n  }\n  return [elementToWrap, index + 1];\n}\nfunction nextElementMaybeContinuesChars({\n  elements,\n  nextIndex,\n  remainingPart\n}) {\n  if (remainingPart === \"\") {\n    return false;\n  }\n  const nextNode = elements[nextIndex];\n  const content = getContent(nextNode);\n  if (!content) {\n    return false;\n  }\n  const includesNext = content.startsWith(remainingPart) || remainingPart.startsWith(content);\n  const overlap = findOverlap(content, remainingPart);\n  if (overlap === remainingPart && content.startsWith(remainingPart)) {\n    return true;\n  }\n  if (includesNext) {\n    return nextElementMaybeContinuesChars({\n      elements,\n      nextIndex: nextIndex + 1,\n      remainingPart: remainingPart.replace(content, \"\")\n    });\n  }\n  return false;\n}\nfunction getContent(node) {\n  if (!node) return;\n  return toString(node);\n}\nfunction findOverlap(a, b) {\n  if (b.length === 0) {\n    return \"\";\n  }\n  if (a.endsWith(b)) {\n    return b;\n  }\n  if (a.indexOf(b) >= 0) {\n    return b;\n  }\n  return findOverlap(a, b.substring(0, b.length - 1));\n}\nfunction reverseString(s) {\n  return s.split(\"\").reverse().join(\"\");\n}\n\n// src/chars/getElementsToHighlight.ts\nfunction getElementsToHighlight(element, chars, startIndex = 0, ignoreChars = false) {\n  const toWrap = [];\n  let charsSoFar = \"\";\n  if (element.children) {\n    const elements = element.children;\n    for (let i = startIndex; i < elements.length; i++) {\n      const remaining = charsSoFar ? chars.replace(charsSoFar, \"\") : chars;\n      if (remaining === \"\") {\n        return toWrap;\n      }\n      const maybeElement = elements[i];\n      if (!maybeElement || maybeElement.type !== \"element\" || // ignore any previously matched chars within\n      Object.hasOwn(\n        maybeElement.properties ?? {},\n        \"rehype-pretty-code-visited\"\n      )) {\n        continue;\n      }\n      const content = getContent(maybeElement) || \"\";\n      if (content === chars || charsSoFar + content === chars) {\n        toWrap.push({ element: maybeElement, index: i });\n        return toWrap;\n      }\n      if (chars.startsWith(charsSoFar + content)) {\n        if (nextElementMaybeContinuesChars({\n          elements,\n          nextIndex: i + 1,\n          remainingPart: remaining.replace(content, \"\")\n        })) {\n          toWrap.push({ element: elements[i], index: i });\n          charsSoFar += content;\n          continue;\n        }\n      }\n      const overlap = findOverlap(content, remaining);\n      const partialMatch = overlap && remaining.startsWith(overlap);\n      if (partialMatch) {\n        const nextPart = remaining.replace(overlap, \"\");\n        if (nextPart !== \"\" && getContent(elements[i + 1]) && !nextElementMaybeContinuesChars({\n          elements,\n          nextIndex: i + 1,\n          remainingPart: nextPart\n        })) {\n          continue;\n        }\n        const splitParts = content.split(overlap);\n        const [leftPart, rightPart, ...rest] = splitParts;\n        if (rightPart || leftPart || rest.length > 0) {\n          const withNextNode = content + (getContent(elements[i + 1]) ? getContent(elements[i + 1]) : \"\");\n          const nextNodeOverlap = findOverlap(withNextNode, remaining);\n          const splitIndex = withNextNode.indexOf(nextNodeOverlap);\n          if (chars.endsWith(overlap) || chars.startsWith(overlap)) {\n            const rightString = rightPart.replace(overlap, \"\");\n            const innerString = overlap;\n            const leftString = content.substring(0, splitIndex);\n            const nextElementContinues = nextElementMaybeContinuesChars({\n              elements,\n              nextIndex: i + 1,\n              remainingPart: nextPart\n            });\n            const [newElement, updatedIndex] = splitElement({\n              elements,\n              elementToWrap: elements[i],\n              innerString,\n              rightString,\n              leftString,\n              rest,\n              nextElementContinues,\n              index: i,\n              ignoreChars\n            });\n            charsSoFar += overlap;\n            toWrap.push({\n              element: newElement,\n              index: updatedIndex\n            });\n          }\n        }\n      }\n    }\n  }\n  return toWrap;\n}\n\n// src/chars/wrapHighlightedChars.ts\nfunction wrapHighlightedChars(parentElement, elementsToWrap, options, ignoreWord, onVisitHighlightedChars) {\n  if (!elementsToWrap || elementsToWrap.length === 0) {\n    return;\n  }\n  const [{ element }] = elementsToWrap;\n  if (ignoreWord) {\n    if (element.properties) {\n      element.properties[\"rehype-pretty-code-visited\"] = \"\";\n    }\n    return;\n  }\n  if (elementsToWrap.length > 1) {\n    parentElement.children.splice(\n      elementsToWrap[0].index,\n      elementsToWrap.length,\n      {\n        type: \"element\",\n        tagName: \"mark\",\n        properties: { \"data-highlighted-chars-mark\": \"\" },\n        children: elementsToWrap.map(({ element: element3 }) => element3)\n      }\n    );\n    const element2 = parentElement.children[elementsToWrap[0].index];\n    if (!isElement(element2)) {\n      return;\n    }\n    const wordStr = element2.children.reduce((acc, node) => {\n      const textElement = isElement(node) ? node.children[0] : null;\n      if (isText(textElement)) {\n        return acc + textElement.value;\n      }\n      return acc;\n    }, \"\");\n    const id = options.idsMap.get(wordStr);\n    element2.properties = element2.properties || {};\n    element2.properties[\"data-highlighted-chars\"] = \"\";\n    element2.properties[\"data-chars-id\"] = id;\n    element2.tagName = \"mark\";\n    onVisitHighlightedChars?.(element2, id);\n  } else {\n    const [{ element: element2 }] = elementsToWrap;\n    const textElement = element2.children[0];\n    if (!isText(textElement)) {\n      return;\n    }\n    const id = options.idsMap.get(textElement.value);\n    element2.properties = element2.properties || {};\n    element2.properties[\"rehype-pretty-code-visited\"] = \"\";\n    element2.properties[\"data-highlighted-chars\"] = \"\";\n    element2.properties[\"data-chars-id\"] = id;\n    element2.tagName = \"mark\";\n    element2.children = [\n      {\n        type: \"element\",\n        tagName: \"span\",\n        properties: {\n          style: element2.properties.style\n        },\n        children: element2.children\n      }\n    ];\n    element2.properties.style = void 0;\n    onVisitHighlightedChars?.(element2, id);\n  }\n}\nfunction charsHighlighter(element, charsList, options, onVisitHighlightedChars) {\n  const { ranges = [] } = options;\n  const textContent = toString(element);\n  charsList.forEach((chars, index) => {\n    if (chars && textContent?.includes(chars)) {\n      let textContent2 = toString(element);\n      let startIndex = 0;\n      while (textContent2.includes(chars)) {\n        const currentCharsRange = ranges[index] || [];\n        const id = `${chars}-${index}`;\n        options.counterMap.set(id, (options.counterMap.get(id) || 0) + 1);\n        const ignoreChars = currentCharsRange.length > 0 && !currentCharsRange.includes(options.counterMap.get(id) ?? -1);\n        const elementsToWrap = getElementsToHighlight(\n          element,\n          chars,\n          startIndex,\n          ignoreChars\n        );\n        if (elementsToWrap.length === 0) break;\n        wrapHighlightedChars(\n          element,\n          elementsToWrap,\n          options,\n          ignoreChars,\n          onVisitHighlightedChars\n        );\n        startIndex = Math.max(\n          elementsToWrap[elementsToWrap.length - 1].index - 2,\n          0\n        );\n        textContent2 = element.children.map((childNode) => {\n          const props = isElement(childNode) ? childNode.properties : {};\n          if (props && !Object.hasOwn(props, \"rehype-pretty-code-visited\") && !Object.hasOwn(props, \"data-highlighted-chars-mark\")) {\n            return toString(childNode);\n          }\n        }).join(\"\");\n      }\n    }\n  });\n  element.children.forEach((childNode) => {\n    if (!isElement(childNode)) return;\n    if (Object.hasOwn(childNode.properties, \"rehype-pretty-code-visited\")) {\n      childNode.properties[\"rehype-pretty-code-visited\"] = void 0;\n    }\n  });\n}\n\n// src/index.ts\nfunction apply(element, {\n  tree,\n  lang,\n  title,\n  caption,\n  inline = false,\n  keepBackground = true,\n  grid = true,\n  lineNumbersMaxDigits = 1,\n  theme,\n  onVisitTitle,\n  onVisitCaption\n}) {\n  element.tagName = inline ? \"span\" : \"figure\";\n  element.properties[\"data-rehype-pretty-code-figure\"] = \"\";\n  const codeData = element.children[0]?.data;\n  element.children = [tree].flatMap((tree2) => {\n    const pre = tree2.children[0];\n    const themeNames = getThemeNames(theme);\n    const themeNamesString = themeNames.join(\" \");\n    if (!(isElement(pre) && pre.properties)) {\n      return [];\n    }\n    const code = pre.children[0];\n    if (Array.isArray(pre.properties.className) && pre.properties.className.includes(\"shiki\")) {\n      const className = pre.properties.className.filter(\n        (c) => c !== \"shiki\" && c !== \"shiki-themes\" && (typeof c === \"string\" ? !themeNames.includes(c) : true)\n      );\n      pre.properties.className = className.length > 0 ? className : void 0;\n    }\n    if (!keepBackground) {\n      pre.properties.style = void 0;\n    }\n    pre.properties[\"data-language\"] = lang;\n    pre.properties[\"data-theme\"] = themeNamesString;\n    if (!(isElement(code) && code.properties)) {\n      return [];\n    }\n    code.properties[\"data-language\"] = lang;\n    code.properties[\"data-theme\"] = themeNamesString;\n    code.data = codeData;\n    if (inline) {\n      if (keepBackground) {\n        code.properties.style = pre.properties.style;\n      }\n      return code;\n    }\n    if (grid) {\n      if (code.properties.style) {\n        code.properties.style += \"display: grid;\";\n      } else {\n        code.properties.style = \"display: grid;\";\n      }\n    }\n    if (Object.hasOwn(code.properties, \"data-line-numbers\")) {\n      code.properties[\"data-line-numbers-max-digits\"] = lineNumbersMaxDigits.toString().length;\n    }\n    const fragments = [];\n    if (title) {\n      const elementContent = {\n        type: \"element\",\n        tagName: caption ? \"div\" : \"figcaption\",\n        properties: {\n          \"data-rehype-pretty-code-title\": \"\",\n          \"data-language\": lang,\n          \"data-theme\": themeNamesString\n        },\n        children: [{ type: \"text\", value: title }]\n      };\n      onVisitTitle?.(elementContent);\n      fragments.push(elementContent);\n    }\n    fragments.push(pre);\n    if (caption) {\n      const elementContent = {\n        type: \"element\",\n        tagName: \"figcaption\",\n        properties: {\n          \"data-rehype-pretty-code-caption\": \"\",\n          \"data-language\": lang,\n          \"data-theme\": themeNamesString\n        },\n        children: [{ type: \"text\", value: caption }]\n      };\n      onVisitCaption?.(elementContent);\n      fragments.push(elementContent);\n    }\n    return fragments;\n  });\n}\nvar globalHighlighterCache = /* @__PURE__ */ new Map();\nvar hastParser = unified().use(rehypeParse, { fragment: true });\nvar src_default = rehypePrettyCode;\nfunction rehypePrettyCode(options = {}) {\n  const {\n    grid = true,\n    theme = \"github-dark-dimmed\",\n    keepBackground = true,\n    bypassInlineCode = false,\n    defaultLang = \"\",\n    tokensMap = {},\n    filterMetaString = (v) => v,\n    getHighlighter = getSingletonHighlighter,\n    transformers,\n    onVisitLine,\n    onVisitHighlightedLine,\n    onVisitHighlightedChars,\n    onVisitTitle,\n    onVisitCaption\n  } = options;\n  const key = JSON.stringify(theme);\n  let cachedHighlighter = globalHighlighterCache.get(key);\n  if (!cachedHighlighter) {\n    cachedHighlighter = getHighlighter({\n      themes: isJSONTheme(theme) || typeof theme === \"string\" ? [theme] : Object.values(theme),\n      langs: [\"plaintext\"]\n    });\n    globalHighlighterCache.set(key, cachedHighlighter);\n  }\n  const defaultCodeBlockLang = typeof defaultLang === \"string\" ? defaultLang : defaultLang.block || \"\";\n  const defaultInlineCodeLang = typeof defaultLang === \"string\" ? defaultLang : defaultLang.inline || \"\";\n  function getOptions(lang, meta) {\n    const multipleThemes = !isJSONTheme(theme) && typeof theme === \"object\" ? theme : null;\n    const singleTheme = isJSONTheme(theme) || typeof theme === \"string\" ? theme : null;\n    return {\n      lang,\n      meta: { __raw: meta },\n      transformers,\n      defaultColor: typeof theme === \"string\" ? theme : false,\n      ...multipleThemes ? { themes: multipleThemes } : { theme: singleTheme }\n    };\n  }\n  return async (tree) => {\n    const langsToLoad = /* @__PURE__ */ new Set();\n    const highlighter = await cachedHighlighter;\n    if (!highlighter) return;\n    visit(tree, \"element\", (element, _, parent) => {\n      if (isInlineCode(element, parent, bypassInlineCode)) {\n        const textElement = element.children[0];\n        if (!isText(textElement)) return;\n        const value = textElement.value;\n        if (!value) return;\n        const lang = getInlineCodeLang(value, defaultInlineCodeLang);\n        if (lang && lang[0] !== \".\") {\n          langsToLoad.add(lang);\n        }\n      }\n      if (isBlockCode(element)) {\n        const codeElement = element.children[0];\n        if (!isElement(codeElement)) return;\n        const { lang } = parseBlockMetaString(\n          codeElement,\n          filterMetaString,\n          defaultCodeBlockLang\n        );\n        if (lang) {\n          langsToLoad.add(lang);\n        }\n      }\n    });\n    try {\n      await Promise.allSettled(\n        Array.from(langsToLoad).map((lang) => {\n          try {\n            return highlighter.loadLanguage(\n              lang\n            );\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        })\n      );\n    } catch (e) {\n      console.error(e);\n    }\n    visit(tree, \"element\", (element, _, parent) => {\n      if (isInlineCode(element, parent, bypassInlineCode)) {\n        const textElement = element.children[0];\n        if (!isText(textElement)) return;\n        const value = textElement.value;\n        if (!value) return;\n        const keepLangPart = /\\\\{:[a-zA-Z.-]+}$/.test(value);\n        const strippedValue = keepLangPart ? value.replace(/\\\\({:[a-zA-Z.-]+})$/, \"$1\") : value.replace(/{:[a-zA-Z.-]+}$/, \"\");\n        textElement.value = strippedValue;\n        const lang = keepLangPart ? \"\" : getInlineCodeLang(value, defaultInlineCodeLang);\n        const isLang = lang[0] !== \".\";\n        if (!lang) return;\n        let codeTree;\n        if (isLang) {\n          try {\n            codeTree = hastParser.parse(\n              highlighter.codeToHtml(strippedValue, getOptions(lang))\n            );\n          } catch {\n            codeTree = hastParser.parse(\n              highlighter.codeToHtml(strippedValue, getOptions(\"plaintext\"))\n            );\n          }\n        } else {\n          const themeNames = getThemeNames(theme);\n          const isMultiTheme = typeof theme === \"object\" && !isJSONTheme(theme);\n          const themeKeys = isMultiTheme ? Object.keys(theme) : null;\n          const colorsByTheme = themeNames.map(\n            (name) => name ? highlighter.getTheme(name).settings.find(\n              ({ scope }) => scope?.includes(tokensMap[lang.slice(1)] ?? lang.slice(1))\n            )?.settings.foreground ?? \"inherit\" : \"inherit\"\n          );\n          if (isMultiTheme && themeKeys) {\n            codeTree = hastParser.parse(\n              `<pre><code><span style=\"${themeKeys.map((key2, i) => `--shiki-${key2}:${colorsByTheme[i]}`).join(\";\")}\">${strippedValue}</span></code></pre>`\n            );\n          } else {\n            codeTree = hastParser.parse(\n              `<pre><code><span style=\"color:${colorsByTheme[0]}\">${strippedValue}</span></code></pre>`\n            );\n          }\n        }\n        visit(codeTree, \"element\", replaceLineClass);\n        apply(element, {\n          tree: codeTree,\n          lang: isLang ? lang : \".token\",\n          inline: true,\n          keepBackground,\n          theme\n        });\n      }\n      if (isBlockCode(element)) {\n        const codeElement = element.children[0];\n        if (!isElement(codeElement)) return;\n        const textElement = codeElement.children[0];\n        const { title, caption, meta, lang } = parseBlockMetaString(\n          codeElement,\n          filterMetaString,\n          defaultCodeBlockLang\n        );\n        if (!lang || lang === \"math\") return;\n        const lineNumbers = [];\n        if (meta) {\n          const matches = meta.matchAll(/\\B\\{(.*?)\\}\\B/g);\n          for (const match of matches) {\n            if (match[1]) {\n              lineNumbers.push(...rangeParser2(match[1]));\n            }\n          }\n        }\n        let lineNumbersMaxDigits = 0;\n        const lineIdMap = /* @__PURE__ */ new Map();\n        const charsList = [];\n        const charsListNumbers = [];\n        const charsListIdMap = /* @__PURE__ */ new Map();\n        const charsMatches = meta ? [\n          ...meta.matchAll(\n            /(?<delimiter>[\"/])(?<chars>.*?)\\k<delimiter>(?<charsIdAndOrRange>\\S*)/g\n          )\n        ] : void 0;\n        lineNumbers.forEach((lineNumber) => {\n          const id = getLineId(lineNumber, meta);\n          id && lineIdMap.set(lineNumber, id);\n        });\n        if (Array.isArray(charsMatches)) {\n          charsMatches.forEach((name) => {\n            const { chars, charsIdAndOrRange } = name.groups;\n            charsList.push(chars);\n            if (charsIdAndOrRange === \"\") {\n              charsListNumbers.push([]);\n            } else {\n              const [range, id] = charsIdAndOrRange.split(\"#\");\n              range && charsListNumbers.push(rangeParser2(range));\n              id && charsListIdMap.set(chars, id);\n            }\n          });\n        }\n        if (!isText(textElement)) return;\n        const strippedValue = textElement.value.replace(/\\n$/, \"\");\n        let codeTree;\n        try {\n          codeTree = hastParser.parse(\n            highlighter.codeToHtml(strippedValue, getOptions(lang, meta))\n          );\n        } catch {\n          codeTree = hastParser.parse(\n            highlighter.codeToHtml(\n              strippedValue,\n              getOptions(\"plaintext\", meta)\n            )\n          );\n        }\n        let lineCounter = 0;\n        const charsHighlighterOptions = {\n          ranges: charsListNumbers,\n          idsMap: charsListIdMap,\n          counterMap: /* @__PURE__ */ new Map()\n        };\n        visit(codeTree, \"element\", (element2) => {\n          if (element2.tagName === \"code\" && /srebmuNeniLwohs(?!(.*)(\\/))/.test(reverseString(meta))) {\n            if (element2.properties) {\n              element2.properties[\"data-line-numbers\"] = \"\";\n            }\n            const lineNumbersStartAtMatch = reverseString(meta).match(\n              /(?:\\}(\\d+){)?srebmuNeniLwohs(?!(.*)(\\/))/\n            );\n            const startNumberString = lineNumbersStartAtMatch?.[1];\n            if (startNumberString) {\n              const startAt = startNumberString ? Number(reverseString(startNumberString)) - 1 : 0;\n              lineNumbersMaxDigits = startAt;\n              if (element2.properties) {\n                element2.properties.style = `counter-set: line ${startAt};`;\n              }\n            }\n          }\n          if (Array.isArray(element2.properties?.className) && element2.properties?.className?.[0] === \"line\") {\n            if (grid && toString(element2) === \"\") {\n              element2.children = [{ type: \"text\", value: \" \" }];\n            }\n            replaceLineClass(element2);\n            onVisitLine?.(element2);\n            lineCounter++;\n            if (lineNumbers.includes(lineCounter)) {\n              element2.properties[\"data-highlighted-line\"] = \"\";\n              const lineId = lineIdMap.get(lineCounter);\n              if (lineId) {\n                element2.properties[\"data-highlighted-line-id\"] = lineId;\n              }\n              onVisitHighlightedLine?.(element2, lineId);\n            }\n            charsHighlighter(\n              element2,\n              charsList,\n              charsHighlighterOptions,\n              onVisitHighlightedChars\n            );\n            lineNumbersMaxDigits++;\n          }\n        });\n        apply(element, {\n          tree: codeTree,\n          lang,\n          title,\n          caption,\n          keepBackground,\n          grid,\n          lineNumbersMaxDigits,\n          theme,\n          onVisitTitle,\n          onVisitCaption\n        });\n      }\n    });\n  };\n}\n\nexport { src_default as default, rehypePrettyCode };\n"],"names":["RedirectStatusCode","REDIRECT_ERROR_CODE","RedirectType","isRedirectError","error","digest","split","errorCode","type","destination","slice","join","status","at","statusCode","Number","isNaN","getRedirectError","getRedirectStatusCodeFromError","getRedirectTypeFromError","getURLFromRedirectError","permanentRedirect","redirect","actionAsyncStorage","window","require","undefined","url","TemporaryRedirect","Error","getStore","isAction","push","replace","PermanentRedirect","HTTPAccessErrorStatus","HTTP_ERROR_FALLBACK_ERROR_CODE","getAccessFallbackErrorTypeByStatus","getAccessFallbackHTTPStatus","isHTTPAccessFallbackError","NOT_FOUND","FORBIDDEN","UNAUTHORIZED","ALLOWED_CODES","Set","Object","values","prefix","httpStatus","has","notFound","DIGEST","forbidden","process","env","__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS","unauthorized","isHangingPromiseRejectionError","makeDevtoolsIOAwarePromise","makeHangingPromise","err","HANGING_PROMISE_REJECTION","HangingPromiseRejectionError","constructor","route","expression","abortListenersBySignal","WeakMap","signal","aborted","Promise","reject","hangingPromise","_","boundRejection","bind","currentListeners","get","listeners","set","addEventListener","i","length","once","catch","ignoreReject","underlying","resolve","setTimeout","isPostpone","REACT_POSTPONE_TYPE","Symbol","for","$$typeof","BailoutToCSRError","isBailoutToCSRError","BAILOUT_TO_CSR","reason","isNextRouterError","DynamicServerError","isDynamicServerError","DYNAMIC_ERROR_CODE","description","StaticGenBailoutError","isStaticGenBailoutError","NEXT_STATIC_GEN_BAILOUT","code","METADATA_BOUNDARY_NAME","OUTLET_BOUNDARY_NAME","ROOT_LAYOUT_BOUNDARY_NAME","VIEWPORT_BOUNDARY_NAME","atLeastOneTask","scheduleImmediate","scheduleOnNextTick","waitAtLeastOneReactRenderTask","cb","then","NEXT_RUNTIME","nextTick","setImmediate","r","InvariantError","message","options","endsWith","name","Postpone","PreludeState","abortAndThrowOnSynchronousRequestDataAccess","abortOnSynchronousPlatformIOAccess","accessedDynamicData","annotateDynamicAccess","consumeDynamicAccess","createDynamicTrackingState","createDynamicValidationState","createHangingInputAbortSignal","createRenderInBrowserAbortSignal","delayUntilRuntimeStage","formatDynamicAPIAccesses","getFirstDynamicReason","isDynamicPostpone","isPrerenderInterruptedError","logDisallowedDynamicError","markCurrentScopeAsDynamic","postponeWithTracking","throwIfDisallowedDynamic","throwToInterruptStaticGeneration","trackAllowedDynamicAccess","trackDynamicDataInDynamicRender","trackSynchronousPlatformIOAccessInDev","trackSynchronousRequestDataAccessInDev","useDynamicRouteParams","warnOnSyncDynamicError","hasPostpone","React","unstable_postpone","isDebugDynamicAccesses","dynamicAccesses","syncDynamicErrorWithStack","hasSuspenseAboveBody","hasDynamicMetadata","hasDynamicViewport","hasAllowedDynamic","dynamicErrors","trackingState","store","workUnitStore","forceDynamic","forceStatic","dynamicShouldError","dynamicTracking","revalidate","dynamicUsageDescription","dynamicUsageStack","stack","NODE_ENV","usedDynamic","prerenderStore","abortOnSynchronousDynamicDataAccess","createPrerenderInterruptedError","controller","abort","errorWithStack","requestStore","prerenderPhase","prerenderSignal","console","workUnitAsyncStorage","assertPostpone","createPostponeReason","isDynamicPostponeReason","includes","NEXT_PRERENDER_INTERRUPTED","serverDynamic","clientDynamic","filter","access","map","line","AbortController","cacheSignal","inputReady","runtimeStagePromise","getRuntimeStagePromise","workStore","workAsyncStorage","fallbackParams","fallbackRouteParams","size","use","renderSignal","hasSuspenseRegex","bodyAndImplicitTags","hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex","RegExp","hasMetadataRegex","hasViewportRegex","hasOutletRegex","componentStack","dynamicValidation","test","createErrorWithComponentOrOwnerStack","ownerStack","captureOwnerStack","dev","hasReadableErrorStacks","prelude","result","unstable_rethrow","cause","ReadonlyURLSearchParams","unstable_isUnrecognizedActionError","ReadonlyURLSearchParamsError","URLSearchParams","append","delete","sort"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,134,135,136,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170]}